#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ImageService
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="Bram_Dev_Test")]
	public partial class ImageDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertImageDB(ImageDB instance);
    partial void UpdateImageDB(ImageDB instance);
    partial void DeleteImageDB(ImageDB instance);
    partial void InsertAuctionLot(AuctionLot instance);
    partial void UpdateAuctionLot(AuctionLot instance);
    partial void DeleteAuctionLot(AuctionLot instance);
    partial void InsertBrand(Brand instance);
    partial void UpdateBrand(Brand instance);
    partial void DeleteBrand(Brand instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    #endregion
		
		public ImageDataContext() : 
				base(global::ImageService.Properties.Settings.Default.Bram_Dev_TestConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ImageDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ImageDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ImageDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ImageDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ImageDB> ImageDBs
		{
			get
			{
				return this.GetTable<ImageDB>();
			}
		}
		
		public System.Data.Linq.Table<AuctionLot> AuctionLots
		{
			get
			{
				return this.GetTable<AuctionLot>();
			}
		}
		
		public System.Data.Linq.Table<Brand> Brands
		{
			get
			{
				return this.GetTable<Brand>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
	}
	
	[Table(Name="dbo.ImageStore")]
	public partial class ImageDB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ImageID;
		
		private string _ManufacturerID;
		
		private System.Nullable<int> _BrandID;
		
		private string _ImageUrl;
		
		private System.Nullable<int> _SizeID;
		
		private string _CustomerProductID;
		
		private System.Nullable<int> _ProductGroupID;
		
		private string _ImageType;
		
		private System.Nullable<int> _Sequence;
		
		private string _BrandCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImageIDChanging(int value);
    partial void OnImageIDChanged();
    partial void OnManufacturerIDChanging(string value);
    partial void OnManufacturerIDChanged();
    partial void OnBrandIDChanging(System.Nullable<int> value);
    partial void OnBrandIDChanged();
    partial void OnImageUrlChanging(string value);
    partial void OnImageUrlChanged();
    partial void OnSizeIDChanging(System.Nullable<int> value);
    partial void OnSizeIDChanged();
    partial void OnCustomerProductIDChanging(string value);
    partial void OnCustomerProductIDChanged();
    partial void OnProductGroupIDChanging(System.Nullable<int> value);
    partial void OnProductGroupIDChanged();
    partial void OnImageTypeChanging(string value);
    partial void OnImageTypeChanged();
    partial void OnSequenceChanging(System.Nullable<int> value);
    partial void OnSequenceChanged();
    partial void OnBrandCodeChanging(string value);
    partial void OnBrandCodeChanged();
    #endregion
		
		public ImageDB()
		{
			OnCreated();
		}
		
		[Column(Storage="_ImageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[Column(Storage="_ManufacturerID", DbType="NVarChar(50)")]
		public string ManufacturerID
		{
			get
			{
				return this._ManufacturerID;
			}
			set
			{
				if ((this._ManufacturerID != value))
				{
					this.OnManufacturerIDChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerID = value;
					this.SendPropertyChanged("ManufacturerID");
					this.OnManufacturerIDChanged();
				}
			}
		}
		
		[Column(Storage="_BrandID", DbType="Int")]
		public System.Nullable<int> BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					this.OnBrandIDChanging(value);
					this.SendPropertyChanging();
					this._BrandID = value;
					this.SendPropertyChanged("BrandID");
					this.OnBrandIDChanged();
				}
			}
		}
		
		[Column(Storage="_ImageUrl", DbType="NVarChar(255)")]
		public string ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this.OnImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ImageUrl = value;
					this.SendPropertyChanged("ImageUrl");
					this.OnImageUrlChanged();
				}
			}
		}
		
		[Column(Storage="_SizeID", DbType="Int")]
		public System.Nullable<int> SizeID
		{
			get
			{
				return this._SizeID;
			}
			set
			{
				if ((this._SizeID != value))
				{
					this.OnSizeIDChanging(value);
					this.SendPropertyChanging();
					this._SizeID = value;
					this.SendPropertyChanged("SizeID");
					this.OnSizeIDChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerProductID", DbType="NVarChar(50)")]
		public string CustomerProductID
		{
			get
			{
				return this._CustomerProductID;
			}
			set
			{
				if ((this._CustomerProductID != value))
				{
					this.OnCustomerProductIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerProductID = value;
					this.SendPropertyChanged("CustomerProductID");
					this.OnCustomerProductIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProductGroupID", DbType="Int")]
		public System.Nullable<int> ProductGroupID
		{
			get
			{
				return this._ProductGroupID;
			}
			set
			{
				if ((this._ProductGroupID != value))
				{
					this.OnProductGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ProductGroupID = value;
					this.SendPropertyChanged("ProductGroupID");
					this.OnProductGroupIDChanged();
				}
			}
		}
		
		[Column(Storage="_ImageType", DbType="NVarChar(50)")]
		public string ImageType
		{
			get
			{
				return this._ImageType;
			}
			set
			{
				if ((this._ImageType != value))
				{
					this.OnImageTypeChanging(value);
					this.SendPropertyChanging();
					this._ImageType = value;
					this.SendPropertyChanged("ImageType");
					this.OnImageTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Sequence", DbType="INT NULL")]
		public System.Nullable<int> Sequence
		{
			get
			{
				return this._Sequence;
			}
			set
			{
				if ((this._Sequence != value))
				{
					this.OnSequenceChanging(value);
					this.SendPropertyChanging();
					this._Sequence = value;
					this.SendPropertyChanged("Sequence");
					this.OnSequenceChanged();
				}
			}
		}
		
		[Column(Storage="_BrandCode", DbType="NVarChar(50)")]
		public string BrandCode
		{
			get
			{
				return this._BrandCode;
			}
			set
			{
				if ((this._BrandCode != value))
				{
					this.OnBrandCodeChanging(value);
					this.SendPropertyChanging();
					this._BrandCode = value;
					this.SendPropertyChanged("BrandCode");
					this.OnBrandCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.AuctionLots")]
	public partial class AuctionLot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AuctionLotID;
		
		private System.Nullable<int> _BackendLotID;
		
		private int _ProductID;
		
		private string _Note;
		
		private decimal _MinimumPrice;
		
		private decimal _MaximumPrice;
		
		private decimal _MinimumBid;
		
		private decimal _MaximumBid;
		
		private System.DateTime _StartTime;
		
		private System.DateTime _EndTime;
		
		private int _Status;
		
		private System.Nullable<int> _WonBy;
		
		private bool _IsApproved;
		
		private System.Nullable<System.DateTime> _ApprovalDate;
		
		private int _CreatedBy;
		
		private System.DateTime _CreationTime;
		
		private int _LastModifiedBy;
		
		private System.DateTime _LastModificationTime;
		
		private System.Guid _rowguid;
		
		private System.Nullable<System.Guid> _ApprovalGuid;
		
		private System.Nullable<System.DateTime> _WinnerEndTimeForAcceptance;
		
		private System.Nullable<bool> _AuctionSpecial;
		
		private System.Nullable<int> _AuctionActionType;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuctionLotIDChanging(int value);
    partial void OnAuctionLotIDChanged();
    partial void OnBackendLotIDChanging(System.Nullable<int> value);
    partial void OnBackendLotIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnMinimumPriceChanging(decimal value);
    partial void OnMinimumPriceChanged();
    partial void OnMaximumPriceChanging(decimal value);
    partial void OnMaximumPriceChanged();
    partial void OnMinimumBidChanging(decimal value);
    partial void OnMinimumBidChanged();
    partial void OnMaximumBidChanging(decimal value);
    partial void OnMaximumBidChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnWonByChanging(System.Nullable<int> value);
    partial void OnWonByChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnApprovalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovalDateChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreationTimeChanging(System.DateTime value);
    partial void OnCreationTimeChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModificationTimeChanging(System.DateTime value);
    partial void OnLastModificationTimeChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnApprovalGuidChanging(System.Nullable<System.Guid> value);
    partial void OnApprovalGuidChanged();
    partial void OnWinnerEndTimeForAcceptanceChanging(System.Nullable<System.DateTime> value);
    partial void OnWinnerEndTimeForAcceptanceChanged();
    partial void OnAuctionSpecialChanging(System.Nullable<bool> value);
    partial void OnAuctionSpecialChanged();
    partial void OnAuctionActionTypeChanging(System.Nullable<int> value);
    partial void OnAuctionActionTypeChanged();
    #endregion
		
		public AuctionLot()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[Column(Storage="_AuctionLotID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AuctionLotID
		{
			get
			{
				return this._AuctionLotID;
			}
			set
			{
				if ((this._AuctionLotID != value))
				{
					this.OnAuctionLotIDChanging(value);
					this.SendPropertyChanging();
					this._AuctionLotID = value;
					this.SendPropertyChanged("AuctionLotID");
					this.OnAuctionLotIDChanged();
				}
			}
		}
		
		[Column(Storage="_BackendLotID", DbType="Int")]
		public System.Nullable<int> BackendLotID
		{
			get
			{
				return this._BackendLotID;
			}
			set
			{
				if ((this._BackendLotID != value))
				{
					this.OnBackendLotIDChanging(value);
					this.SendPropertyChanging();
					this._BackendLotID = value;
					this.SendPropertyChanged("BackendLotID");
					this.OnBackendLotIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[Column(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[Column(Storage="_MinimumPrice", DbType="Decimal(18,4) NOT NULL")]
		public decimal MinimumPrice
		{
			get
			{
				return this._MinimumPrice;
			}
			set
			{
				if ((this._MinimumPrice != value))
				{
					this.OnMinimumPriceChanging(value);
					this.SendPropertyChanging();
					this._MinimumPrice = value;
					this.SendPropertyChanged("MinimumPrice");
					this.OnMinimumPriceChanged();
				}
			}
		}
		
		[Column(Storage="_MaximumPrice", DbType="Decimal(18,4) NOT NULL")]
		public decimal MaximumPrice
		{
			get
			{
				return this._MaximumPrice;
			}
			set
			{
				if ((this._MaximumPrice != value))
				{
					this.OnMaximumPriceChanging(value);
					this.SendPropertyChanging();
					this._MaximumPrice = value;
					this.SendPropertyChanged("MaximumPrice");
					this.OnMaximumPriceChanged();
				}
			}
		}
		
		[Column(Storage="_MinimumBid", DbType="Decimal(18,4) NOT NULL")]
		public decimal MinimumBid
		{
			get
			{
				return this._MinimumBid;
			}
			set
			{
				if ((this._MinimumBid != value))
				{
					this.OnMinimumBidChanging(value);
					this.SendPropertyChanging();
					this._MinimumBid = value;
					this.SendPropertyChanged("MinimumBid");
					this.OnMinimumBidChanged();
				}
			}
		}
		
		[Column(Storage="_MaximumBid", DbType="Decimal(18,4) NOT NULL")]
		public decimal MaximumBid
		{
			get
			{
				return this._MaximumBid;
			}
			set
			{
				if ((this._MaximumBid != value))
				{
					this.OnMaximumBidChanging(value);
					this.SendPropertyChanging();
					this._MaximumBid = value;
					this.SendPropertyChanged("MaximumBid");
					this.OnMaximumBidChanged();
				}
			}
		}
		
		[Column(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[Column(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_WonBy", DbType="Int")]
		public System.Nullable<int> WonBy
		{
			get
			{
				return this._WonBy;
			}
			set
			{
				if ((this._WonBy != value))
				{
					this.OnWonByChanging(value);
					this.SendPropertyChanging();
					this._WonBy = value;
					this.SendPropertyChanged("WonBy");
					this.OnWonByChanged();
				}
			}
		}
		
		[Column(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[Column(Storage="_ApprovalDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovalDate
		{
			get
			{
				return this._ApprovalDate;
			}
			set
			{
				if ((this._ApprovalDate != value))
				{
					this.OnApprovalDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovalDate = value;
					this.SendPropertyChanged("ApprovalDate");
					this.OnApprovalDateChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[Column(Storage="_CreationTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[Column(Storage="_LastModifiedBy", DbType="Int NOT NULL")]
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[Column(Storage="_LastModificationTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[Column(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[Column(Storage="_ApprovalGuid", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ApprovalGuid
		{
			get
			{
				return this._ApprovalGuid;
			}
			set
			{
				if ((this._ApprovalGuid != value))
				{
					this.OnApprovalGuidChanging(value);
					this.SendPropertyChanging();
					this._ApprovalGuid = value;
					this.SendPropertyChanged("ApprovalGuid");
					this.OnApprovalGuidChanged();
				}
			}
		}
		
		[Column(Storage="_WinnerEndTimeForAcceptance", DbType="DateTime")]
		public System.Nullable<System.DateTime> WinnerEndTimeForAcceptance
		{
			get
			{
				return this._WinnerEndTimeForAcceptance;
			}
			set
			{
				if ((this._WinnerEndTimeForAcceptance != value))
				{
					this.OnWinnerEndTimeForAcceptanceChanging(value);
					this.SendPropertyChanging();
					this._WinnerEndTimeForAcceptance = value;
					this.SendPropertyChanged("WinnerEndTimeForAcceptance");
					this.OnWinnerEndTimeForAcceptanceChanged();
				}
			}
		}
		
		[Column(Storage="_AuctionSpecial", DbType="Bit")]
		public System.Nullable<bool> AuctionSpecial
		{
			get
			{
				return this._AuctionSpecial;
			}
			set
			{
				if ((this._AuctionSpecial != value))
				{
					this.OnAuctionSpecialChanging(value);
					this.SendPropertyChanging();
					this._AuctionSpecial = value;
					this.SendPropertyChanged("AuctionSpecial");
					this.OnAuctionSpecialChanged();
				}
			}
		}
		
		[Column(Storage="_AuctionActionType", DbType="Int")]
		public System.Nullable<int> AuctionActionType
		{
			get
			{
				return this._AuctionActionType;
			}
			set
			{
				if ((this._AuctionActionType != value))
				{
					this.OnAuctionActionTypeChanging(value);
					this.SendPropertyChanging();
					this._AuctionActionType = value;
					this.SendPropertyChanged("AuctionActionType");
					this.OnAuctionActionTypeChanged();
				}
			}
		}
		
		[Association(Name="Product_AuctionLot", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.AuctionLots.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.AuctionLots.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Brands")]
	public partial class Brand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BrandID;
		
		private string _BrandCode;
		
		private string _BrandName;
		
		private string _BrandWebsite;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationTime;
		
		private System.Nullable<int> _LastModifiedBy;
		
		private System.Nullable<System.DateTime> _LastModificationTime;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBrandIDChanging(int value);
    partial void OnBrandIDChanged();
    partial void OnBrandCodeChanging(string value);
    partial void OnBrandCodeChanged();
    partial void OnBrandNameChanging(string value);
    partial void OnBrandNameChanged();
    partial void OnBrandWebsiteChanging(string value);
    partial void OnBrandWebsiteChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationTimeChanged();
    partial void OnLastModifiedByChanging(System.Nullable<int> value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModificationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModificationTimeChanged();
    #endregion
		
		public Brand()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[Column(Storage="_BrandID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					this.OnBrandIDChanging(value);
					this.SendPropertyChanging();
					this._BrandID = value;
					this.SendPropertyChanged("BrandID");
					this.OnBrandIDChanged();
				}
			}
		}
		
		[Column(Storage="_BrandCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string BrandCode
		{
			get
			{
				return this._BrandCode;
			}
			set
			{
				if ((this._BrandCode != value))
				{
					this.OnBrandCodeChanging(value);
					this.SendPropertyChanging();
					this._BrandCode = value;
					this.SendPropertyChanged("BrandCode");
					this.OnBrandCodeChanged();
				}
			}
		}
		
		[Column(Storage="_BrandName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this.OnBrandNameChanging(value);
					this.SendPropertyChanging();
					this._BrandName = value;
					this.SendPropertyChanged("BrandName");
					this.OnBrandNameChanged();
				}
			}
		}
		
		[Column(Storage="_BrandWebsite", DbType="VarChar(100)")]
		public string BrandWebsite
		{
			get
			{
				return this._BrandWebsite;
			}
			set
			{
				if ((this._BrandWebsite != value))
				{
					this.OnBrandWebsiteChanging(value);
					this.SendPropertyChanging();
					this._BrandWebsite = value;
					this.SendPropertyChanged("BrandWebsite");
					this.OnBrandWebsiteChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[Column(Storage="_CreationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[Column(Storage="_LastModifiedBy", DbType="Int")]
		public System.Nullable<int> LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[Column(Storage="_LastModificationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[Association(Name="Brand_Product", Storage="_Products", ThisKey="BrandID", OtherKey="BrandID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Brand = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Brand = null;
		}
	}
	
	[Table(Name="dbo.Products")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductID;
		
		private string _ShortDescription;
		
		private string _LongDescription;
		
		private string _ManufacturerID;
		
		private int _BrandID;
		
		private int _TaxRateID;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private System.Nullable<decimal> _UnitCost;
		
		private string _LedgerClass;
		
		private bool _IsCustom;
		
		private string _LineType;
		
		private string _ProductStatus;
		
		private bool _IsVisible;
		
		private bool _ExtendedCatalog;
		
		private System.Nullable<System.DateTime> _PromisedDeliveryDate;
		
		private bool _CanModifyPrice;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.DateTime _CreationTime;
		
		private System.Nullable<int> _LastModifiedBy;
		
		private System.DateTime _LastModificationTime;
		
		private string _ProductDesk;
		
		private System.Nullable<bool> _PromisedDeliveryDateOverride;
		
		private EntitySet<AuctionLot> _AuctionLots;
		
		private EntityRef<Brand> _Brand;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnShortDescriptionChanging(string value);
    partial void OnShortDescriptionChanged();
    partial void OnLongDescriptionChanging(string value);
    partial void OnLongDescriptionChanged();
    partial void OnManufacturerIDChanging(string value);
    partial void OnManufacturerIDChanged();
    partial void OnBrandIDChanging(int value);
    partial void OnBrandIDChanged();
    partial void OnTaxRateIDChanging(int value);
    partial void OnTaxRateIDChanged();
    partial void OnUnitPriceChanging(System.Nullable<decimal> value);
    partial void OnUnitPriceChanged();
    partial void OnUnitCostChanging(System.Nullable<decimal> value);
    partial void OnUnitCostChanged();
    partial void OnLedgerClassChanging(string value);
    partial void OnLedgerClassChanged();
    partial void OnIsCustomChanging(bool value);
    partial void OnIsCustomChanged();
    partial void OnLineTypeChanging(string value);
    partial void OnLineTypeChanged();
    partial void OnProductStatusChanging(string value);
    partial void OnProductStatusChanged();
    partial void OnIsVisibleChanging(bool value);
    partial void OnIsVisibleChanged();
    partial void OnExtendedCatalogChanging(bool value);
    partial void OnExtendedCatalogChanged();
    partial void OnPromisedDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPromisedDeliveryDateChanged();
    partial void OnCanModifyPriceChanging(bool value);
    partial void OnCanModifyPriceChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationTimeChanging(System.DateTime value);
    partial void OnCreationTimeChanged();
    partial void OnLastModifiedByChanging(System.Nullable<int> value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModificationTimeChanging(System.DateTime value);
    partial void OnLastModificationTimeChanged();
    partial void OnProductDeskChanging(string value);
    partial void OnProductDeskChanged();
    partial void OnPromisedDeliveryDateOverrideChanging(System.Nullable<bool> value);
    partial void OnPromisedDeliveryDateOverrideChanged();
    #endregion
		
		public Product()
		{
			this._AuctionLots = new EntitySet<AuctionLot>(new Action<AuctionLot>(this.attach_AuctionLots), new Action<AuctionLot>(this.detach_AuctionLots));
			this._Brand = default(EntityRef<Brand>);
			OnCreated();
		}
		
		[Column(Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[Column(Storage="_ShortDescription", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ShortDescription
		{
			get
			{
				return this._ShortDescription;
			}
			set
			{
				if ((this._ShortDescription != value))
				{
					this.OnShortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ShortDescription = value;
					this.SendPropertyChanged("ShortDescription");
					this.OnShortDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_LongDescription", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string LongDescription
		{
			get
			{
				return this._LongDescription;
			}
			set
			{
				if ((this._LongDescription != value))
				{
					this.OnLongDescriptionChanging(value);
					this.SendPropertyChanging();
					this._LongDescription = value;
					this.SendPropertyChanged("LongDescription");
					this.OnLongDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_ManufacturerID", DbType="VarChar(100)")]
		public string ManufacturerID
		{
			get
			{
				return this._ManufacturerID;
			}
			set
			{
				if ((this._ManufacturerID != value))
				{
					this.OnManufacturerIDChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerID = value;
					this.SendPropertyChanged("ManufacturerID");
					this.OnManufacturerIDChanged();
				}
			}
		}
		
		[Column(Storage="_BrandID", DbType="Int NOT NULL")]
		public int BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					if (this._Brand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrandIDChanging(value);
					this.SendPropertyChanging();
					this._BrandID = value;
					this.SendPropertyChanged("BrandID");
					this.OnBrandIDChanged();
				}
			}
		}
		
		[Column(Storage="_TaxRateID", DbType="Int NOT NULL")]
		public int TaxRateID
		{
			get
			{
				return this._TaxRateID;
			}
			set
			{
				if ((this._TaxRateID != value))
				{
					this.OnTaxRateIDChanging(value);
					this.SendPropertyChanging();
					this._TaxRateID = value;
					this.SendPropertyChanged("TaxRateID");
					this.OnTaxRateIDChanged();
				}
			}
		}
		
		[Column(Storage="_UnitPrice", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[Column(Storage="_UnitCost", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> UnitCost
		{
			get
			{
				return this._UnitCost;
			}
			set
			{
				if ((this._UnitCost != value))
				{
					this.OnUnitCostChanging(value);
					this.SendPropertyChanging();
					this._UnitCost = value;
					this.SendPropertyChanged("UnitCost");
					this.OnUnitCostChanged();
				}
			}
		}
		
		[Column(Storage="_LedgerClass", DbType="VarChar(50)")]
		public string LedgerClass
		{
			get
			{
				return this._LedgerClass;
			}
			set
			{
				if ((this._LedgerClass != value))
				{
					this.OnLedgerClassChanging(value);
					this.SendPropertyChanging();
					this._LedgerClass = value;
					this.SendPropertyChanged("LedgerClass");
					this.OnLedgerClassChanged();
				}
			}
		}
		
		[Column(Storage="_IsCustom", DbType="Bit NOT NULL")]
		public bool IsCustom
		{
			get
			{
				return this._IsCustom;
			}
			set
			{
				if ((this._IsCustom != value))
				{
					this.OnIsCustomChanging(value);
					this.SendPropertyChanging();
					this._IsCustom = value;
					this.SendPropertyChanged("IsCustom");
					this.OnIsCustomChanged();
				}
			}
		}
		
		[Column(Storage="_LineType", DbType="VarChar(4)")]
		public string LineType
		{
			get
			{
				return this._LineType;
			}
			set
			{
				if ((this._LineType != value))
				{
					this.OnLineTypeChanging(value);
					this.SendPropertyChanging();
					this._LineType = value;
					this.SendPropertyChanged("LineType");
					this.OnLineTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ProductStatus", DbType="VarChar(2)")]
		public string ProductStatus
		{
			get
			{
				return this._ProductStatus;
			}
			set
			{
				if ((this._ProductStatus != value))
				{
					this.OnProductStatusChanging(value);
					this.SendPropertyChanging();
					this._ProductStatus = value;
					this.SendPropertyChanged("ProductStatus");
					this.OnProductStatusChanged();
				}
			}
		}
		
		[Column(Storage="_IsVisible", DbType="Bit NOT NULL")]
		public bool IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[Column(Storage="_ExtendedCatalog", DbType="Bit NOT NULL")]
		public bool ExtendedCatalog
		{
			get
			{
				return this._ExtendedCatalog;
			}
			set
			{
				if ((this._ExtendedCatalog != value))
				{
					this.OnExtendedCatalogChanging(value);
					this.SendPropertyChanging();
					this._ExtendedCatalog = value;
					this.SendPropertyChanged("ExtendedCatalog");
					this.OnExtendedCatalogChanged();
				}
			}
		}
		
		[Column(Storage="_PromisedDeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PromisedDeliveryDate
		{
			get
			{
				return this._PromisedDeliveryDate;
			}
			set
			{
				if ((this._PromisedDeliveryDate != value))
				{
					this.OnPromisedDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._PromisedDeliveryDate = value;
					this.SendPropertyChanged("PromisedDeliveryDate");
					this.OnPromisedDeliveryDateChanged();
				}
			}
		}
		
		[Column(Storage="_CanModifyPrice", DbType="Bit NOT NULL")]
		public bool CanModifyPrice
		{
			get
			{
				return this._CanModifyPrice;
			}
			set
			{
				if ((this._CanModifyPrice != value))
				{
					this.OnCanModifyPriceChanging(value);
					this.SendPropertyChanging();
					this._CanModifyPrice = value;
					this.SendPropertyChanged("CanModifyPrice");
					this.OnCanModifyPriceChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[Column(Storage="_CreationTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[Column(Storage="_LastModifiedBy", DbType="Int")]
		public System.Nullable<int> LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[Column(Storage="_LastModificationTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[Column(Storage="_ProductDesk", DbType="VarChar(50)")]
		public string ProductDesk
		{
			get
			{
				return this._ProductDesk;
			}
			set
			{
				if ((this._ProductDesk != value))
				{
					this.OnProductDeskChanging(value);
					this.SendPropertyChanging();
					this._ProductDesk = value;
					this.SendPropertyChanged("ProductDesk");
					this.OnProductDeskChanged();
				}
			}
		}
		
		[Column(Storage="_PromisedDeliveryDateOverride", DbType="Bit")]
		public System.Nullable<bool> PromisedDeliveryDateOverride
		{
			get
			{
				return this._PromisedDeliveryDateOverride;
			}
			set
			{
				if ((this._PromisedDeliveryDateOverride != value))
				{
					this.OnPromisedDeliveryDateOverrideChanging(value);
					this.SendPropertyChanging();
					this._PromisedDeliveryDateOverride = value;
					this.SendPropertyChanged("PromisedDeliveryDateOverride");
					this.OnPromisedDeliveryDateOverrideChanged();
				}
			}
		}
		
		[Association(Name="Product_AuctionLot", Storage="_AuctionLots", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<AuctionLot> AuctionLots
		{
			get
			{
				return this._AuctionLots;
			}
			set
			{
				this._AuctionLots.Assign(value);
			}
		}
		
		[Association(Name="Brand_Product", Storage="_Brand", ThisKey="BrandID", OtherKey="BrandID", IsForeignKey=true)]
		public Brand Brand
		{
			get
			{
				return this._Brand.Entity;
			}
			set
			{
				Brand previousValue = this._Brand.Entity;
				if (((previousValue != value) 
							|| (this._Brand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Brand.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Brand.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._BrandID = value.BrandID;
					}
					else
					{
						this._BrandID = default(int);
					}
					this.SendPropertyChanged("Brand");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AuctionLots(AuctionLot entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_AuctionLots(AuctionLot entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
}
#pragma warning restore 1591
