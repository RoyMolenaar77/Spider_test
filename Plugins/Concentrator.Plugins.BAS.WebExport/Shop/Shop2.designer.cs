#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Concentrator.Plugins.BAS.WebExport.Shop
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MyCom_Shop_Content")]
	public partial class ShopDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBrand(Brand instance);
    partial void UpdateBrand(Brand instance);
    partial void DeleteBrand(Brand instance);
    partial void InsertProductBarcode(ProductBarcode instance);
    partial void UpdateProductBarcode(ProductBarcode instance);
    partial void DeleteProductBarcode(ProductBarcode instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertTaxRate(TaxRate instance);
    partial void UpdateTaxRate(TaxRate instance);
    partial void DeleteTaxRate(TaxRate instance);
    partial void InsertProductGroup(ProductGroup instance);
    partial void UpdateProductGroup(ProductGroup instance);
    partial void DeleteProductGroup(ProductGroup instance);
    partial void InsertAttributeMetaData(AttributeMetaData instance);
    partial void UpdateAttributeMetaData(AttributeMetaData instance);
    partial void DeleteAttributeMetaData(AttributeMetaData instance);
    partial void InsertProductAttribute(ProductAttribute instance);
    partial void UpdateProductAttribute(ProductAttribute instance);
    partial void DeleteProductAttribute(ProductAttribute instance);
    partial void InsertProductGroupsAttributeMetaData(ProductGroupsAttributeMetaData instance);
    partial void UpdateProductGroupsAttributeMetaData(ProductGroupsAttributeMetaData instance);
    partial void DeleteProductGroupsAttributeMetaData(ProductGroupsAttributeMetaData instance);
    partial void InsertVendorStock(VendorStock instance);
    partial void UpdateVendorStock(VendorStock instance);
    partial void DeleteVendorStock(VendorStock instance);
    #endregion
		
		public ShopDataContext() : 
				base(global::Concentrator.Plugins.BAS.WebExport.Properties.Settings.Default.MyCom_Shop_ContentConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ShopDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShopDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShopDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShopDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Brand> Brands
		{
			get
			{
				return this.GetTable<Brand>();
			}
		}
		
		public System.Data.Linq.Table<ProductBarcode> ProductBarcodes
		{
			get
			{
				return this.GetTable<ProductBarcode>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<TaxRate> TaxRates
		{
			get
			{
				return this.GetTable<TaxRate>();
			}
		}
		
		public System.Data.Linq.Table<ProductGroup> ProductGroups
		{
			get
			{
				return this.GetTable<ProductGroup>();
			}
		}
		
		public System.Data.Linq.Table<AttributeMetaData> AttributeMetaDatas
		{
			get
			{
				return this.GetTable<AttributeMetaData>();
			}
		}
		
		public System.Data.Linq.Table<ProductAttribute> ProductAttributes
		{
			get
			{
				return this.GetTable<ProductAttribute>();
			}
		}
		
		public System.Data.Linq.Table<ProductGroupsAttributeMetaData> ProductGroupsAttributeMetaDatas
		{
			get
			{
				return this.GetTable<ProductGroupsAttributeMetaData>();
			}
		}
		
		public System.Data.Linq.Table<VendorStock> VendorStocks
		{
			get
			{
				return this.GetTable<VendorStock>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Brands")]
	public partial class Brand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BrandID;
		
		private string _BrandCode;
		
		private string _BrandName;
		
		private string _BrandWebsite;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationTime;
		
		private System.Nullable<int> _LastModifiedBy;
		
		private System.Nullable<System.DateTime> _LastModificationTime;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBrandIDChanging(int value);
    partial void OnBrandIDChanged();
    partial void OnBrandCodeChanging(string value);
    partial void OnBrandCodeChanged();
    partial void OnBrandNameChanging(string value);
    partial void OnBrandNameChanged();
    partial void OnBrandWebsiteChanging(string value);
    partial void OnBrandWebsiteChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationTimeChanged();
    partial void OnLastModifiedByChanging(System.Nullable<int> value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModificationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModificationTimeChanged();
    #endregion
		
		public Brand()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					this.OnBrandIDChanging(value);
					this.SendPropertyChanging();
					this._BrandID = value;
					this.SendPropertyChanged("BrandID");
					this.OnBrandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string BrandCode
		{
			get
			{
				return this._BrandCode;
			}
			set
			{
				if ((this._BrandCode != value))
				{
					this.OnBrandCodeChanging(value);
					this.SendPropertyChanging();
					this._BrandCode = value;
					this.SendPropertyChanged("BrandCode");
					this.OnBrandCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this.OnBrandNameChanging(value);
					this.SendPropertyChanging();
					this._BrandName = value;
					this.SendPropertyChanged("BrandName");
					this.OnBrandNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandWebsite", DbType="VarChar(100)")]
		public string BrandWebsite
		{
			get
			{
				return this._BrandWebsite;
			}
			set
			{
				if ((this._BrandWebsite != value))
				{
					this.OnBrandWebsiteChanging(value);
					this.SendPropertyChanging();
					this._BrandWebsite = value;
					this.SendPropertyChanged("BrandWebsite");
					this.OnBrandWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int")]
		public System.Nullable<int> LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brand_Product", Storage="_Products", ThisKey="BrandID", OtherKey="BrandID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Brand = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Brand = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductBarcodes")]
	public partial class ProductBarcode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Barcode;
		
		private string _BarcodeType;
		
		private int _ProductID;
		
		private System.DateTime _LastModificationTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBarcodeChanging(string value);
    partial void OnBarcodeChanged();
    partial void OnBarcodeTypeChanging(string value);
    partial void OnBarcodeTypeChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnLastModificationTimeChanging(System.DateTime value);
    partial void OnLastModificationTimeChanged();
    #endregion
		
		public ProductBarcode()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarcodeType", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BarcodeType
		{
			get
			{
				return this._BarcodeType;
			}
			set
			{
				if ((this._BarcodeType != value))
				{
					this.OnBarcodeTypeChanging(value);
					this.SendPropertyChanging();
					this._BarcodeType = value;
					this.SendPropertyChanged("BarcodeType");
					this.OnBarcodeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductID;
		
		private int _ProductGroupID;
		
		private string _ShortDescription;
		
		private string _LongDescription;
		
		private string _ManufacturerID;
		
		private int _BrandID;
		
		private int _TaxRateID;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private System.Nullable<decimal> _UnitCost;
		
		private string _LedgerClass;
		
		private bool _IsCustom;
		
		private string _LineType;
		
		private string _ProductStatus;
		
		private bool _IsVisible;
		
		private bool _ExtendedCatalog;
		
		private System.Nullable<System.DateTime> _PromisedDeliveryDate;
		
		private bool _CanModifyPrice;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.DateTime _CreationTime;
		
		private System.Nullable<int> _LastModifiedBy;
		
		private System.DateTime _LastModificationTime;
		
		private string _ProductDesk;
		
		private EntitySet<ProductGroup> _ProductGroups;
		
		private EntitySet<ProductAttribute> _ProductAttributes;
		
		private EntityRef<Brand> _Brand;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnProductGroupIDChanging(int value);
    partial void OnProductGroupIDChanged();
    partial void OnShortDescriptionChanging(string value);
    partial void OnShortDescriptionChanged();
    partial void OnLongDescriptionChanging(string value);
    partial void OnLongDescriptionChanged();
    partial void OnManufacturerIDChanging(string value);
    partial void OnManufacturerIDChanged();
    partial void OnBrandIDChanging(int value);
    partial void OnBrandIDChanged();
    partial void OnTaxRateIDChanging(int value);
    partial void OnTaxRateIDChanged();
    partial void OnUnitPriceChanging(System.Nullable<decimal> value);
    partial void OnUnitPriceChanged();
    partial void OnUnitCostChanging(System.Nullable<decimal> value);
    partial void OnUnitCostChanged();
    partial void OnLedgerClassChanging(string value);
    partial void OnLedgerClassChanged();
    partial void OnIsCustomChanging(bool value);
    partial void OnIsCustomChanged();
    partial void OnLineTypeChanging(string value);
    partial void OnLineTypeChanged();
    partial void OnProductStatusChanging(string value);
    partial void OnProductStatusChanged();
    partial void OnIsVisibleChanging(bool value);
    partial void OnIsVisibleChanged();
    partial void OnExtendedCatalogChanging(bool value);
    partial void OnExtendedCatalogChanged();
    partial void OnPromisedDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPromisedDeliveryDateChanged();
    partial void OnCanModifyPriceChanging(bool value);
    partial void OnCanModifyPriceChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationTimeChanging(System.DateTime value);
    partial void OnCreationTimeChanged();
    partial void OnLastModifiedByChanging(System.Nullable<int> value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModificationTimeChanging(System.DateTime value);
    partial void OnLastModificationTimeChanged();
    partial void OnProductDeskChanging(string value);
    partial void OnProductDeskChanged();
    #endregion
		
		public Product()
		{
			this._ProductGroups = new EntitySet<ProductGroup>(new Action<ProductGroup>(this.attach_ProductGroups), new Action<ProductGroup>(this.detach_ProductGroups));
			this._ProductAttributes = new EntitySet<ProductAttribute>(new Action<ProductAttribute>(this.attach_ProductAttributes), new Action<ProductAttribute>(this.detach_ProductAttributes));
			this._Brand = default(EntityRef<Brand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductGroupID", DbType="Int NOT NULL")]
		public int ProductGroupID
		{
			get
			{
				return this._ProductGroupID;
			}
			set
			{
				if ((this._ProductGroupID != value))
				{
					this.OnProductGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ProductGroupID = value;
					this.SendPropertyChanged("ProductGroupID");
					this.OnProductGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string ShortDescription
		{
			get
			{
				return this._ShortDescription;
			}
			set
			{
				if ((this._ShortDescription != value))
				{
					this.OnShortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ShortDescription = value;
					this.SendPropertyChanged("ShortDescription");
					this.OnShortDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongDescription", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string LongDescription
		{
			get
			{
				return this._LongDescription;
			}
			set
			{
				if ((this._LongDescription != value))
				{
					this.OnLongDescriptionChanging(value);
					this.SendPropertyChanging();
					this._LongDescription = value;
					this.SendPropertyChanged("LongDescription");
					this.OnLongDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerID", DbType="VarChar(100)")]
		public string ManufacturerID
		{
			get
			{
				return this._ManufacturerID;
			}
			set
			{
				if ((this._ManufacturerID != value))
				{
					this.OnManufacturerIDChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerID = value;
					this.SendPropertyChanged("ManufacturerID");
					this.OnManufacturerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandID", DbType="Int NOT NULL")]
		public int BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					if (this._Brand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrandIDChanging(value);
					this.SendPropertyChanging();
					this._BrandID = value;
					this.SendPropertyChanged("BrandID");
					this.OnBrandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxRateID", DbType="Int NOT NULL")]
		public int TaxRateID
		{
			get
			{
				return this._TaxRateID;
			}
			set
			{
				if ((this._TaxRateID != value))
				{
					this.OnTaxRateIDChanging(value);
					this.SendPropertyChanging();
					this._TaxRateID = value;
					this.SendPropertyChanged("TaxRateID");
					this.OnTaxRateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCost", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> UnitCost
		{
			get
			{
				return this._UnitCost;
			}
			set
			{
				if ((this._UnitCost != value))
				{
					this.OnUnitCostChanging(value);
					this.SendPropertyChanging();
					this._UnitCost = value;
					this.SendPropertyChanged("UnitCost");
					this.OnUnitCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LedgerClass", DbType="VarChar(50)")]
		public string LedgerClass
		{
			get
			{
				return this._LedgerClass;
			}
			set
			{
				if ((this._LedgerClass != value))
				{
					this.OnLedgerClassChanging(value);
					this.SendPropertyChanging();
					this._LedgerClass = value;
					this.SendPropertyChanged("LedgerClass");
					this.OnLedgerClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCustom", DbType="Bit NOT NULL")]
		public bool IsCustom
		{
			get
			{
				return this._IsCustom;
			}
			set
			{
				if ((this._IsCustom != value))
				{
					this.OnIsCustomChanging(value);
					this.SendPropertyChanging();
					this._IsCustom = value;
					this.SendPropertyChanged("IsCustom");
					this.OnIsCustomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineType", DbType="VarChar(4)")]
		public string LineType
		{
			get
			{
				return this._LineType;
			}
			set
			{
				if ((this._LineType != value))
				{
					this.OnLineTypeChanging(value);
					this.SendPropertyChanging();
					this._LineType = value;
					this.SendPropertyChanged("LineType");
					this.OnLineTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductStatus", DbType="VarChar(2)")]
		public string ProductStatus
		{
			get
			{
				return this._ProductStatus;
			}
			set
			{
				if ((this._ProductStatus != value))
				{
					this.OnProductStatusChanging(value);
					this.SendPropertyChanging();
					this._ProductStatus = value;
					this.SendPropertyChanged("ProductStatus");
					this.OnProductStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit NOT NULL")]
		public bool IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtendedCatalog", DbType="Bit NOT NULL")]
		public bool ExtendedCatalog
		{
			get
			{
				return this._ExtendedCatalog;
			}
			set
			{
				if ((this._ExtendedCatalog != value))
				{
					this.OnExtendedCatalogChanging(value);
					this.SendPropertyChanging();
					this._ExtendedCatalog = value;
					this.SendPropertyChanged("ExtendedCatalog");
					this.OnExtendedCatalogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromisedDeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PromisedDeliveryDate
		{
			get
			{
				return this._PromisedDeliveryDate;
			}
			set
			{
				if ((this._PromisedDeliveryDate != value))
				{
					this.OnPromisedDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._PromisedDeliveryDate = value;
					this.SendPropertyChanged("PromisedDeliveryDate");
					this.OnPromisedDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanModifyPrice", DbType="Bit NOT NULL")]
		public bool CanModifyPrice
		{
			get
			{
				return this._CanModifyPrice;
			}
			set
			{
				if ((this._CanModifyPrice != value))
				{
					this.OnCanModifyPriceChanging(value);
					this.SendPropertyChanging();
					this._CanModifyPrice = value;
					this.SendPropertyChanged("CanModifyPrice");
					this.OnCanModifyPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int")]
		public System.Nullable<int> LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDesk", DbType="VarChar(50)")]
		public string ProductDesk
		{
			get
			{
				return this._ProductDesk;
			}
			set
			{
				if ((this._ProductDesk != value))
				{
					this.OnProductDeskChanging(value);
					this.SendPropertyChanging();
					this._ProductDesk = value;
					this.SendPropertyChanged("ProductDesk");
					this.OnProductDeskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductGroup", Storage="_ProductGroups", ThisKey="ProductID", OtherKey="FeaturedProductID")]
		public EntitySet<ProductGroup> ProductGroups
		{
			get
			{
				return this._ProductGroups;
			}
			set
			{
				this._ProductGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductAttribute", Storage="_ProductAttributes", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<ProductAttribute> ProductAttributes
		{
			get
			{
				return this._ProductAttributes;
			}
			set
			{
				this._ProductAttributes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brand_Product", Storage="_Brand", ThisKey="BrandID", OtherKey="BrandID", IsForeignKey=true)]
		public Brand Brand
		{
			get
			{
				return this._Brand.Entity;
			}
			set
			{
				Brand previousValue = this._Brand.Entity;
				if (((previousValue != value) 
							|| (this._Brand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Brand.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Brand.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._BrandID = value.BrandID;
					}
					else
					{
						this._BrandID = default(int);
					}
					this.SendPropertyChanged("Brand");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductGroups(ProductGroup entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductGroups(ProductGroup entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductAttributes(ProductAttribute entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductAttributes(ProductAttribute entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaxRates")]
	public partial class TaxRate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TaxRateID;
		
		private System.Nullable<decimal> _TaxRate1;
		
		private string _Description;
		
		private string _LedgerClass;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationTime;
		
		private System.Nullable<int> _LastModifiedBy;
		
		private System.Nullable<System.DateTime> _LastModificationTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaxRateIDChanging(int value);
    partial void OnTaxRateIDChanged();
    partial void OnTaxRate1Changing(System.Nullable<decimal> value);
    partial void OnTaxRate1Changed();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLedgerClassChanging(string value);
    partial void OnLedgerClassChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationTimeChanged();
    partial void OnLastModifiedByChanging(System.Nullable<int> value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModificationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModificationTimeChanged();
    #endregion
		
		public TaxRate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxRateID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TaxRateID
		{
			get
			{
				return this._TaxRateID;
			}
			set
			{
				if ((this._TaxRateID != value))
				{
					this.OnTaxRateIDChanging(value);
					this.SendPropertyChanging();
					this._TaxRateID = value;
					this.SendPropertyChanged("TaxRateID");
					this.OnTaxRateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TaxRate", Storage="_TaxRate1", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> TaxRate1
		{
			get
			{
				return this._TaxRate1;
			}
			set
			{
				if ((this._TaxRate1 != value))
				{
					this.OnTaxRate1Changing(value);
					this.SendPropertyChanging();
					this._TaxRate1 = value;
					this.SendPropertyChanged("TaxRate1");
					this.OnTaxRate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LedgerClass", DbType="VarChar(10)")]
		public string LedgerClass
		{
			get
			{
				return this._LedgerClass;
			}
			set
			{
				if ((this._LedgerClass != value))
				{
					this.OnLedgerClassChanging(value);
					this.SendPropertyChanging();
					this._LedgerClass = value;
					this.SendPropertyChanged("LedgerClass");
					this.OnLedgerClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int")]
		public System.Nullable<int> LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductGroups")]
	public partial class ProductGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductGroupID;
		
		private string _ProductGroupCode;
		
		private string _BackendProductGroupCode;
		
		private System.Nullable<int> _ParentProductGroupID;
		
		private string _ProductGroupName;
		
		private System.Nullable<int> _FeaturedProductID;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationTime;
		
		private System.Nullable<int> _LastModifiedBy;
		
		private System.Nullable<System.DateTime> _LastModificationTime;
		
		private bool _SerialNumberRequired;
		
		private EntitySet<ProductAttribute> _ProductAttributes;
		
		private EntitySet<ProductGroupsAttributeMetaData> _ProductGroupsAttributeMetaDatas;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductGroupIDChanging(int value);
    partial void OnProductGroupIDChanged();
    partial void OnProductGroupCodeChanging(string value);
    partial void OnProductGroupCodeChanged();
    partial void OnBackendProductGroupCodeChanging(string value);
    partial void OnBackendProductGroupCodeChanged();
    partial void OnParentProductGroupIDChanging(System.Nullable<int> value);
    partial void OnParentProductGroupIDChanged();
    partial void OnProductGroupNameChanging(string value);
    partial void OnProductGroupNameChanged();
    partial void OnFeaturedProductIDChanging(System.Nullable<int> value);
    partial void OnFeaturedProductIDChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationTimeChanged();
    partial void OnLastModifiedByChanging(System.Nullable<int> value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModificationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModificationTimeChanged();
    partial void OnSerialNumberRequiredChanging(bool value);
    partial void OnSerialNumberRequiredChanged();
    #endregion
		
		public ProductGroup()
		{
			this._ProductAttributes = new EntitySet<ProductAttribute>(new Action<ProductAttribute>(this.attach_ProductAttributes), new Action<ProductAttribute>(this.detach_ProductAttributes));
			this._ProductGroupsAttributeMetaDatas = new EntitySet<ProductGroupsAttributeMetaData>(new Action<ProductGroupsAttributeMetaData>(this.attach_ProductGroupsAttributeMetaDatas), new Action<ProductGroupsAttributeMetaData>(this.detach_ProductGroupsAttributeMetaDatas));
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductGroupID
		{
			get
			{
				return this._ProductGroupID;
			}
			set
			{
				if ((this._ProductGroupID != value))
				{
					this.OnProductGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ProductGroupID = value;
					this.SendPropertyChanged("ProductGroupID");
					this.OnProductGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductGroupCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductGroupCode
		{
			get
			{
				return this._ProductGroupCode;
			}
			set
			{
				if ((this._ProductGroupCode != value))
				{
					this.OnProductGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductGroupCode = value;
					this.SendPropertyChanged("ProductGroupCode");
					this.OnProductGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackendProductGroupCode", DbType="VarChar(10)")]
		public string BackendProductGroupCode
		{
			get
			{
				return this._BackendProductGroupCode;
			}
			set
			{
				if ((this._BackendProductGroupCode != value))
				{
					this.OnBackendProductGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._BackendProductGroupCode = value;
					this.SendPropertyChanged("BackendProductGroupCode");
					this.OnBackendProductGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentProductGroupID", DbType="Int")]
		public System.Nullable<int> ParentProductGroupID
		{
			get
			{
				return this._ParentProductGroupID;
			}
			set
			{
				if ((this._ParentProductGroupID != value))
				{
					this.OnParentProductGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ParentProductGroupID = value;
					this.SendPropertyChanged("ParentProductGroupID");
					this.OnParentProductGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductGroupName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductGroupName
		{
			get
			{
				return this._ProductGroupName;
			}
			set
			{
				if ((this._ProductGroupName != value))
				{
					this.OnProductGroupNameChanging(value);
					this.SendPropertyChanging();
					this._ProductGroupName = value;
					this.SendPropertyChanged("ProductGroupName");
					this.OnProductGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeaturedProductID", DbType="Int")]
		public System.Nullable<int> FeaturedProductID
		{
			get
			{
				return this._FeaturedProductID;
			}
			set
			{
				if ((this._FeaturedProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeaturedProductIDChanging(value);
					this.SendPropertyChanging();
					this._FeaturedProductID = value;
					this.SendPropertyChanged("FeaturedProductID");
					this.OnFeaturedProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int")]
		public System.Nullable<int> LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumberRequired", DbType="Bit NOT NULL")]
		public bool SerialNumberRequired
		{
			get
			{
				return this._SerialNumberRequired;
			}
			set
			{
				if ((this._SerialNumberRequired != value))
				{
					this.OnSerialNumberRequiredChanging(value);
					this.SendPropertyChanging();
					this._SerialNumberRequired = value;
					this.SendPropertyChanged("SerialNumberRequired");
					this.OnSerialNumberRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductGroup_ProductAttribute", Storage="_ProductAttributes", ThisKey="ProductGroupID", OtherKey="ProductGroupID")]
		public EntitySet<ProductAttribute> ProductAttributes
		{
			get
			{
				return this._ProductAttributes;
			}
			set
			{
				this._ProductAttributes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductGroup_ProductGroupsAttributeMetaData", Storage="_ProductGroupsAttributeMetaDatas", ThisKey="ProductGroupID", OtherKey="ProductGroupID")]
		public EntitySet<ProductGroupsAttributeMetaData> ProductGroupsAttributeMetaDatas
		{
			get
			{
				return this._ProductGroupsAttributeMetaDatas;
			}
			set
			{
				this._ProductGroupsAttributeMetaDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductGroup", Storage="_Product", ThisKey="FeaturedProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductGroups.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductGroups.Add(this);
						this._FeaturedProductID = value.ProductID;
					}
					else
					{
						this._FeaturedProductID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductAttributes(ProductAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ProductGroup = this;
		}
		
		private void detach_ProductAttributes(ProductAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ProductGroup = null;
		}
		
		private void attach_ProductGroupsAttributeMetaDatas(ProductGroupsAttributeMetaData entity)
		{
			this.SendPropertyChanging();
			entity.ProductGroup = this;
		}
		
		private void detach_ProductGroupsAttributeMetaDatas(ProductGroupsAttributeMetaData entity)
		{
			this.SendPropertyChanging();
			entity.ProductGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AttributeMetaData")]
	public partial class AttributeMetaData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttributeMetaDataID;
		
		private string _AttributeName;
		
		private System.Nullable<int> _DataTypeID;
		
		private string _FormatString;
		
		private System.DateTime _LastModificationTime;
		
		private EntitySet<ProductAttribute> _ProductAttributes;
		
		private EntitySet<ProductGroupsAttributeMetaData> _ProductGroupsAttributeMetaDatas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttributeMetaDataIDChanging(int value);
    partial void OnAttributeMetaDataIDChanged();
    partial void OnAttributeNameChanging(string value);
    partial void OnAttributeNameChanged();
    partial void OnDataTypeIDChanging(System.Nullable<int> value);
    partial void OnDataTypeIDChanged();
    partial void OnFormatStringChanging(string value);
    partial void OnFormatStringChanged();
    partial void OnLastModificationTimeChanging(System.DateTime value);
    partial void OnLastModificationTimeChanged();
    #endregion
		
		public AttributeMetaData()
		{
			this._ProductAttributes = new EntitySet<ProductAttribute>(new Action<ProductAttribute>(this.attach_ProductAttributes), new Action<ProductAttribute>(this.detach_ProductAttributes));
			this._ProductGroupsAttributeMetaDatas = new EntitySet<ProductGroupsAttributeMetaData>(new Action<ProductGroupsAttributeMetaData>(this.attach_ProductGroupsAttributeMetaDatas), new Action<ProductGroupsAttributeMetaData>(this.detach_ProductGroupsAttributeMetaDatas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeMetaDataID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AttributeMetaDataID
		{
			get
			{
				return this._AttributeMetaDataID;
			}
			set
			{
				if ((this._AttributeMetaDataID != value))
				{
					this.OnAttributeMetaDataIDChanging(value);
					this.SendPropertyChanging();
					this._AttributeMetaDataID = value;
					this.SendPropertyChanged("AttributeMetaDataID");
					this.OnAttributeMetaDataIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeName", DbType="NVarChar(100)")]
		public string AttributeName
		{
			get
			{
				return this._AttributeName;
			}
			set
			{
				if ((this._AttributeName != value))
				{
					this.OnAttributeNameChanging(value);
					this.SendPropertyChanging();
					this._AttributeName = value;
					this.SendPropertyChanged("AttributeName");
					this.OnAttributeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataTypeID", DbType="Int")]
		public System.Nullable<int> DataTypeID
		{
			get
			{
				return this._DataTypeID;
			}
			set
			{
				if ((this._DataTypeID != value))
				{
					this.OnDataTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DataTypeID = value;
					this.SendPropertyChanged("DataTypeID");
					this.OnDataTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormatString", DbType="NVarChar(100)")]
		public string FormatString
		{
			get
			{
				return this._FormatString;
			}
			set
			{
				if ((this._FormatString != value))
				{
					this.OnFormatStringChanging(value);
					this.SendPropertyChanging();
					this._FormatString = value;
					this.SendPropertyChanged("FormatString");
					this.OnFormatStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AttributeMetaData_ProductAttribute", Storage="_ProductAttributes", ThisKey="AttributeMetaDataID", OtherKey="AttributeMetaDataID")]
		public EntitySet<ProductAttribute> ProductAttributes
		{
			get
			{
				return this._ProductAttributes;
			}
			set
			{
				this._ProductAttributes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AttributeMetaData_ProductGroupsAttributeMetaData", Storage="_ProductGroupsAttributeMetaDatas", ThisKey="AttributeMetaDataID", OtherKey="AttributeMetaDataID")]
		public EntitySet<ProductGroupsAttributeMetaData> ProductGroupsAttributeMetaDatas
		{
			get
			{
				return this._ProductGroupsAttributeMetaDatas;
			}
			set
			{
				this._ProductGroupsAttributeMetaDatas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductAttributes(ProductAttribute entity)
		{
			this.SendPropertyChanging();
			entity.AttributeMetaData = this;
		}
		
		private void detach_ProductAttributes(ProductAttribute entity)
		{
			this.SendPropertyChanging();
			entity.AttributeMetaData = null;
		}
		
		private void attach_ProductGroupsAttributeMetaDatas(ProductGroupsAttributeMetaData entity)
		{
			this.SendPropertyChanging();
			entity.AttributeMetaData = this;
		}
		
		private void detach_ProductGroupsAttributeMetaDatas(ProductGroupsAttributeMetaData entity)
		{
			this.SendPropertyChanging();
			entity.AttributeMetaData = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductAttributes")]
	public partial class ProductAttribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductAttributeID;
		
		private int _ProductID;
		
		private int _ProductGroupID;
		
		private int _AttributeMetaDataID;
		
		private string _AttributeValue;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationTime;
		
		private System.Nullable<int> _LastModifiedBy;
		
		private System.Nullable<System.DateTime> _LastModificationTime;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<AttributeMetaData> _AttributeMetaData;
		
		private EntityRef<ProductGroup> _ProductGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductAttributeIDChanging(int value);
    partial void OnProductAttributeIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnProductGroupIDChanging(int value);
    partial void OnProductGroupIDChanged();
    partial void OnAttributeMetaDataIDChanging(int value);
    partial void OnAttributeMetaDataIDChanged();
    partial void OnAttributeValueChanging(string value);
    partial void OnAttributeValueChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationTimeChanged();
    partial void OnLastModifiedByChanging(System.Nullable<int> value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModificationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModificationTimeChanged();
    #endregion
		
		public ProductAttribute()
		{
			this._Product = default(EntityRef<Product>);
			this._AttributeMetaData = default(EntityRef<AttributeMetaData>);
			this._ProductGroup = default(EntityRef<ProductGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductAttributeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductAttributeID
		{
			get
			{
				return this._ProductAttributeID;
			}
			set
			{
				if ((this._ProductAttributeID != value))
				{
					this.OnProductAttributeIDChanging(value);
					this.SendPropertyChanging();
					this._ProductAttributeID = value;
					this.SendPropertyChanged("ProductAttributeID");
					this.OnProductAttributeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductGroupID", DbType="Int NOT NULL")]
		public int ProductGroupID
		{
			get
			{
				return this._ProductGroupID;
			}
			set
			{
				if ((this._ProductGroupID != value))
				{
					if (this._ProductGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ProductGroupID = value;
					this.SendPropertyChanged("ProductGroupID");
					this.OnProductGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeMetaDataID", DbType="Int NOT NULL")]
		public int AttributeMetaDataID
		{
			get
			{
				return this._AttributeMetaDataID;
			}
			set
			{
				if ((this._AttributeMetaDataID != value))
				{
					if (this._AttributeMetaData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeMetaDataIDChanging(value);
					this.SendPropertyChanging();
					this._AttributeMetaDataID = value;
					this.SendPropertyChanged("AttributeMetaDataID");
					this.OnAttributeMetaDataIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeValue", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string AttributeValue
		{
			get
			{
				return this._AttributeValue;
			}
			set
			{
				if ((this._AttributeValue != value))
				{
					this.OnAttributeValueChanging(value);
					this.SendPropertyChanging();
					this._AttributeValue = value;
					this.SendPropertyChanged("AttributeValue");
					this.OnAttributeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int")]
		public System.Nullable<int> LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductAttribute", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductAttributes.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductAttributes.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AttributeMetaData_ProductAttribute", Storage="_AttributeMetaData", ThisKey="AttributeMetaDataID", OtherKey="AttributeMetaDataID", IsForeignKey=true)]
		public AttributeMetaData AttributeMetaData
		{
			get
			{
				return this._AttributeMetaData.Entity;
			}
			set
			{
				AttributeMetaData previousValue = this._AttributeMetaData.Entity;
				if (((previousValue != value) 
							|| (this._AttributeMetaData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AttributeMetaData.Entity = null;
						previousValue.ProductAttributes.Remove(this);
					}
					this._AttributeMetaData.Entity = value;
					if ((value != null))
					{
						value.ProductAttributes.Add(this);
						this._AttributeMetaDataID = value.AttributeMetaDataID;
					}
					else
					{
						this._AttributeMetaDataID = default(int);
					}
					this.SendPropertyChanged("AttributeMetaData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductGroup_ProductAttribute", Storage="_ProductGroup", ThisKey="ProductGroupID", OtherKey="ProductGroupID", IsForeignKey=true)]
		public ProductGroup ProductGroup
		{
			get
			{
				return this._ProductGroup.Entity;
			}
			set
			{
				ProductGroup previousValue = this._ProductGroup.Entity;
				if (((previousValue != value) 
							|| (this._ProductGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductGroup.Entity = null;
						previousValue.ProductAttributes.Remove(this);
					}
					this._ProductGroup.Entity = value;
					if ((value != null))
					{
						value.ProductAttributes.Add(this);
						this._ProductGroupID = value.ProductGroupID;
					}
					else
					{
						this._ProductGroupID = default(int);
					}
					this.SendPropertyChanged("ProductGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductGroupsAttributeMetaData")]
	public partial class ProductGroupsAttributeMetaData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductGroupID;
		
		private int _AttributeMetaDataID;
		
		private System.Nullable<bool> _IsRequired;
		
		private System.Nullable<bool> _IsQuickSearch;
		
		private System.Nullable<int> _OrderIndex;
		
		private System.DateTime _LastModificationTime;
		
		private EntityRef<AttributeMetaData> _AttributeMetaData;
		
		private EntityRef<ProductGroup> _ProductGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductGroupIDChanging(int value);
    partial void OnProductGroupIDChanged();
    partial void OnAttributeMetaDataIDChanging(int value);
    partial void OnAttributeMetaDataIDChanged();
    partial void OnIsRequiredChanging(System.Nullable<bool> value);
    partial void OnIsRequiredChanged();
    partial void OnIsQuickSearchChanging(System.Nullable<bool> value);
    partial void OnIsQuickSearchChanged();
    partial void OnOrderIndexChanging(System.Nullable<int> value);
    partial void OnOrderIndexChanged();
    partial void OnLastModificationTimeChanging(System.DateTime value);
    partial void OnLastModificationTimeChanged();
    #endregion
		
		public ProductGroupsAttributeMetaData()
		{
			this._AttributeMetaData = default(EntityRef<AttributeMetaData>);
			this._ProductGroup = default(EntityRef<ProductGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductGroupID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductGroupID
		{
			get
			{
				return this._ProductGroupID;
			}
			set
			{
				if ((this._ProductGroupID != value))
				{
					if (this._ProductGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ProductGroupID = value;
					this.SendPropertyChanged("ProductGroupID");
					this.OnProductGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeMetaDataID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AttributeMetaDataID
		{
			get
			{
				return this._AttributeMetaDataID;
			}
			set
			{
				if ((this._AttributeMetaDataID != value))
				{
					if (this._AttributeMetaData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeMetaDataIDChanging(value);
					this.SendPropertyChanging();
					this._AttributeMetaDataID = value;
					this.SendPropertyChanged("AttributeMetaDataID");
					this.OnAttributeMetaDataIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequired", DbType="Bit")]
		public System.Nullable<bool> IsRequired
		{
			get
			{
				return this._IsRequired;
			}
			set
			{
				if ((this._IsRequired != value))
				{
					this.OnIsRequiredChanging(value);
					this.SendPropertyChanging();
					this._IsRequired = value;
					this.SendPropertyChanged("IsRequired");
					this.OnIsRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsQuickSearch", DbType="Bit")]
		public System.Nullable<bool> IsQuickSearch
		{
			get
			{
				return this._IsQuickSearch;
			}
			set
			{
				if ((this._IsQuickSearch != value))
				{
					this.OnIsQuickSearchChanging(value);
					this.SendPropertyChanging();
					this._IsQuickSearch = value;
					this.SendPropertyChanged("IsQuickSearch");
					this.OnIsQuickSearchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderIndex", DbType="Int")]
		public System.Nullable<int> OrderIndex
		{
			get
			{
				return this._OrderIndex;
			}
			set
			{
				if ((this._OrderIndex != value))
				{
					this.OnOrderIndexChanging(value);
					this.SendPropertyChanging();
					this._OrderIndex = value;
					this.SendPropertyChanged("OrderIndex");
					this.OnOrderIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AttributeMetaData_ProductGroupsAttributeMetaData", Storage="_AttributeMetaData", ThisKey="AttributeMetaDataID", OtherKey="AttributeMetaDataID", IsForeignKey=true)]
		public AttributeMetaData AttributeMetaData
		{
			get
			{
				return this._AttributeMetaData.Entity;
			}
			set
			{
				AttributeMetaData previousValue = this._AttributeMetaData.Entity;
				if (((previousValue != value) 
							|| (this._AttributeMetaData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AttributeMetaData.Entity = null;
						previousValue.ProductGroupsAttributeMetaDatas.Remove(this);
					}
					this._AttributeMetaData.Entity = value;
					if ((value != null))
					{
						value.ProductGroupsAttributeMetaDatas.Add(this);
						this._AttributeMetaDataID = value.AttributeMetaDataID;
					}
					else
					{
						this._AttributeMetaDataID = default(int);
					}
					this.SendPropertyChanged("AttributeMetaData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductGroup_ProductGroupsAttributeMetaData", Storage="_ProductGroup", ThisKey="ProductGroupID", OtherKey="ProductGroupID", IsForeignKey=true)]
		public ProductGroup ProductGroup
		{
			get
			{
				return this._ProductGroup.Entity;
			}
			set
			{
				ProductGroup previousValue = this._ProductGroup.Entity;
				if (((previousValue != value) 
							|| (this._ProductGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductGroup.Entity = null;
						previousValue.ProductGroupsAttributeMetaDatas.Remove(this);
					}
					this._ProductGroup.Entity = value;
					if ((value != null))
					{
						value.ProductGroupsAttributeMetaDatas.Add(this);
						this._ProductGroupID = value.ProductGroupID;
					}
					else
					{
						this._ProductGroupID = default(int);
					}
					this.SendPropertyChanged("ProductGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VendorStock")]
	public partial class VendorStock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RelationID;
		
		private string _StockLocationID;
		
		private int _ProductID;
		
		private string _VendorProductID;
		
		private string _VendorProductStatus;
		
		private int _QuantityOnHand;
		
		private System.Nullable<System.DateTime> _PromisedDeliveryDate;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationTime;
		
		private System.Nullable<int> _LastModifiedBy;
		
		private System.Nullable<System.DateTime> _LastModificationTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRelationIDChanging(int value);
    partial void OnRelationIDChanged();
    partial void OnStockLocationIDChanging(string value);
    partial void OnStockLocationIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnVendorProductIDChanging(string value);
    partial void OnVendorProductIDChanged();
    partial void OnVendorProductStatusChanging(string value);
    partial void OnVendorProductStatusChanged();
    partial void OnQuantityOnHandChanging(int value);
    partial void OnQuantityOnHandChanged();
    partial void OnPromisedDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPromisedDeliveryDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationTimeChanged();
    partial void OnLastModifiedByChanging(System.Nullable<int> value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModificationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModificationTimeChanged();
    #endregion
		
		public VendorStock()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RelationID
		{
			get
			{
				return this._RelationID;
			}
			set
			{
				if ((this._RelationID != value))
				{
					this.OnRelationIDChanging(value);
					this.SendPropertyChanging();
					this._RelationID = value;
					this.SendPropertyChanged("RelationID");
					this.OnRelationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockLocationID", DbType="VarChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string StockLocationID
		{
			get
			{
				return this._StockLocationID;
			}
			set
			{
				if ((this._StockLocationID != value))
				{
					this.OnStockLocationIDChanging(value);
					this.SendPropertyChanging();
					this._StockLocationID = value;
					this.SendPropertyChanged("StockLocationID");
					this.OnStockLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorProductID", DbType="VarChar(50)")]
		public string VendorProductID
		{
			get
			{
				return this._VendorProductID;
			}
			set
			{
				if ((this._VendorProductID != value))
				{
					this.OnVendorProductIDChanging(value);
					this.SendPropertyChanging();
					this._VendorProductID = value;
					this.SendPropertyChanged("VendorProductID");
					this.OnVendorProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorProductStatus", DbType="VarChar(2)")]
		public string VendorProductStatus
		{
			get
			{
				return this._VendorProductStatus;
			}
			set
			{
				if ((this._VendorProductStatus != value))
				{
					this.OnVendorProductStatusChanging(value);
					this.SendPropertyChanging();
					this._VendorProductStatus = value;
					this.SendPropertyChanged("VendorProductStatus");
					this.OnVendorProductStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityOnHand", DbType="Int NOT NULL")]
		public int QuantityOnHand
		{
			get
			{
				return this._QuantityOnHand;
			}
			set
			{
				if ((this._QuantityOnHand != value))
				{
					this.OnQuantityOnHandChanging(value);
					this.SendPropertyChanging();
					this._QuantityOnHand = value;
					this.SendPropertyChanged("QuantityOnHand");
					this.OnQuantityOnHandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromisedDeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PromisedDeliveryDate
		{
			get
			{
				return this._PromisedDeliveryDate;
			}
			set
			{
				if ((this._PromisedDeliveryDate != value))
				{
					this.OnPromisedDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._PromisedDeliveryDate = value;
					this.SendPropertyChanged("PromisedDeliveryDate");
					this.OnPromisedDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int")]
		public System.Nullable<int> LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
