//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Concentrator.Plugins.ACSystems.ProductInfoService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemReferenceCollection", Namespace="http://www.ac-systems.com/AnCWCFWebService/DataContracts/ItemReferenceCollection/" +
        "2008/10")]
    [System.SerializableAttribute()]
    public partial class ItemReferenceCollection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Concentrator.Plugins.ACSystems.ProductInfoService.ItemReference[] ItemReferencesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Concentrator.Plugins.ACSystems.ProductInfoService.ItemReference[] ItemReferences {
            get {
                return this.ItemReferencesField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemReferencesField, value) != true)) {
                    this.ItemReferencesField = value;
                    this.RaisePropertyChanged("ItemReferences");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemReference", Namespace="http://www.ac-systems.com/Support/Serialization/ItemReference/2008/11")]
    [System.SerializableAttribute()]
    public partial class ItemReference : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurItemNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorItemNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EANCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurItemNo {
            get {
                return this.OurItemNoField;
            }
            set {
                if ((object.ReferenceEquals(this.OurItemNoField, value) != true)) {
                    this.OurItemNoField = value;
                    this.RaisePropertyChanged("OurItemNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorItemNo {
            get {
                return this.VendorItemNoField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorItemNoField, value) != true)) {
                    this.VendorItemNoField = value;
                    this.RaisePropertyChanged("VendorItemNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string EANCode {
            get {
                return this.EANCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EANCodeField, value) != true)) {
                    this.EANCodeField = value;
                    this.RaisePropertyChanged("EANCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArgumentInvalidException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
    [System.SerializableAttribute()]
    public partial class ArgumentInvalidException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotAuthorizedException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
    [System.SerializableAttribute()]
    public partial class NotAuthorizedException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SessionKeyNotValidException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
    [System.SerializableAttribute()]
    public partial class SessionKeyNotValidException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Brand", Namespace="http://www.ac-systems.com/AnCWCFWebService/DataContracts/Brand/2008/12")]
    [System.SerializableAttribute()]
    public partial class Brand : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string NameField;
        
        private string CodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceInfo", Namespace="http://www.ac-systems.com/AnCWCFWebService/DataContracts/DeviceInfo/2008/06")]
    [System.SerializableAttribute()]
    public partial class DeviceInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IDField;
        
        private string NameField;
        
        private string BrandField;
        
        private Concentrator.Plugins.ACSystems.ProductInfoService.DeviceTypeEnum TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Concentrator.Plugins.ACSystems.ProductInfoService.ItemReference ItemReferenceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string Brand {
            get {
                return this.BrandField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandField, value) != true)) {
                    this.BrandField = value;
                    this.RaisePropertyChanged("Brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public Concentrator.Plugins.ACSystems.ProductInfoService.DeviceTypeEnum Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public Concentrator.Plugins.ACSystems.ProductInfoService.ItemReference ItemReference {
            get {
                return this.ItemReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemReferenceField, value) != true)) {
                    this.ItemReferenceField = value;
                    this.RaisePropertyChanged("ItemReference");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceTypeEnum", Namespace="http://www.ac-systems.com/AnCWCFWebService/DataContracts/BrandTypeEnum/2008/11")]
    public enum DeviceTypeEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DECT = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GSM = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MP3AndMultimedia = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GPS = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDA = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FixedDevices = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Camcorder = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Camera = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Notebook = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tablet = 9,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemNotFoundException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
    [System.SerializableAttribute()]
    public partial class ItemNotFoundException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CachedItemInfoCollection", Namespace="http://www.ac-systems.com/AnCWCFWebService/DataContracts/CachedItemInfoCollection" +
        "/2008/06")]
    [System.SerializableAttribute()]
    public partial class CachedItemInfoCollection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CachedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Concentrator.Plugins.ACSystems.ProductInfoService.CachedItemInfo[] ItemInfosField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CachedAt {
            get {
                return this.CachedAtField;
            }
            set {
                if ((this.CachedAtField.Equals(value) != true)) {
                    this.CachedAtField = value;
                    this.RaisePropertyChanged("CachedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Concentrator.Plugins.ACSystems.ProductInfoService.CachedItemInfo[] ItemInfos {
            get {
                return this.ItemInfosField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemInfosField, value) != true)) {
                    this.ItemInfosField = value;
                    this.RaisePropertyChanged("ItemInfos");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CachedItemInfo", Namespace="http://www.ac-systems.com/AnCWCFWebService/DataContracts/CachedItemInfo/2008/06")]
    [System.SerializableAttribute()]
    public partial class CachedItemInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BarCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Category1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Category2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Category3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Category4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Price1PieceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceEndUserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BarCode {
            get {
                return this.BarCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BarCodeField, value) != true)) {
                    this.BarCodeField = value;
                    this.RaisePropertyChanged("BarCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category1 {
            get {
                return this.Category1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Category1Field, value) != true)) {
                    this.Category1Field = value;
                    this.RaisePropertyChanged("Category1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category2 {
            get {
                return this.Category2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Category2Field, value) != true)) {
                    this.Category2Field = value;
                    this.RaisePropertyChanged("Category2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category3 {
            get {
                return this.Category3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Category3Field, value) != true)) {
                    this.Category3Field = value;
                    this.RaisePropertyChanged("Category3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category4 {
            get {
                return this.Category4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Category4Field, value) != true)) {
                    this.Category4Field = value;
                    this.RaisePropertyChanged("Category4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InStock {
            get {
                return this.InStockField;
            }
            set {
                if ((this.InStockField.Equals(value) != true)) {
                    this.InStockField = value;
                    this.RaisePropertyChanged("InStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price1Piece {
            get {
                return this.Price1PieceField;
            }
            set {
                if ((this.Price1PieceField.Equals(value) != true)) {
                    this.Price1PieceField = value;
                    this.RaisePropertyChanged("Price1Piece");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PriceEndUser {
            get {
                return this.PriceEndUserField;
            }
            set {
                if ((this.PriceEndUserField.Equals(value) != true)) {
                    this.PriceEndUserField = value;
                    this.RaisePropertyChanged("PriceEndUser");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtendedCachedItemInfoCollection", Namespace="http://www.ac-systems.com/AnCWCFWebService/DataContracts/ExtendedCachedItemInfoCo" +
        "llection/2009/02")]
    [System.SerializableAttribute()]
    public partial class ExtendedCachedItemInfoCollection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CachedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Concentrator.Plugins.ACSystems.ProductInfoService.ExtendedCachedItemInfo[] ItemInfosField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CachedAt {
            get {
                return this.CachedAtField;
            }
            set {
                if ((this.CachedAtField.Equals(value) != true)) {
                    this.CachedAtField = value;
                    this.RaisePropertyChanged("CachedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Concentrator.Plugins.ACSystems.ProductInfoService.ExtendedCachedItemInfo[] ItemInfos {
            get {
                return this.ItemInfosField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemInfosField, value) != true)) {
                    this.ItemInfosField = value;
                    this.RaisePropertyChanged("ItemInfos");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtendedCachedItemInfo", Namespace="http://www.ac-systems.com/AnCWCFWebService/DataContracts/ExtendedCachedItemInfo/2" +
        "009/02")]
    [System.SerializableAttribute()]
    public partial class ExtendedCachedItemInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Concentrator.Plugins.ACSystems.ProductInfoService.ItemReference ItemReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Price1PieceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceEndUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        private string Category1Field;
        
        private string Category2Field;
        
        private string Category3Field;
        
        private string Category4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Concentrator.Plugins.ACSystems.ProductInfoService.ExtendedCachedItemInfoImage[] ImagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Concentrator.Plugins.ACSystems.ProductInfoService.ExtendedCachedItemInfoDeviceInfo[] DevicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebsiteDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionFRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebsiteDescriptionFRField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Concentrator.Plugins.ACSystems.ProductInfoService.ItemReference ItemReference {
            get {
                return this.ItemReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemReferenceField, value) != true)) {
                    this.ItemReferenceField = value;
                    this.RaisePropertyChanged("ItemReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price1Piece {
            get {
                return this.Price1PieceField;
            }
            set {
                if ((this.Price1PieceField.Equals(value) != true)) {
                    this.Price1PieceField = value;
                    this.RaisePropertyChanged("Price1Piece");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PriceEndUser {
            get {
                return this.PriceEndUserField;
            }
            set {
                if ((this.PriceEndUserField.Equals(value) != true)) {
                    this.PriceEndUserField = value;
                    this.RaisePropertyChanged("PriceEndUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public string Category1 {
            get {
                return this.Category1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Category1Field, value) != true)) {
                    this.Category1Field = value;
                    this.RaisePropertyChanged("Category1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public string Category2 {
            get {
                return this.Category2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Category2Field, value) != true)) {
                    this.Category2Field = value;
                    this.RaisePropertyChanged("Category2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public string Category3 {
            get {
                return this.Category3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Category3Field, value) != true)) {
                    this.Category3Field = value;
                    this.RaisePropertyChanged("Category3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public string Category4 {
            get {
                return this.Category4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Category4Field, value) != true)) {
                    this.Category4Field = value;
                    this.RaisePropertyChanged("Category4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public int InStock {
            get {
                return this.InStockField;
            }
            set {
                if ((this.InStockField.Equals(value) != true)) {
                    this.InStockField = value;
                    this.RaisePropertyChanged("InStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryCodeField, value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public Concentrator.Plugins.ACSystems.ProductInfoService.ExtendedCachedItemInfoImage[] Images {
            get {
                return this.ImagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagesField, value) != true)) {
                    this.ImagesField = value;
                    this.RaisePropertyChanged("Images");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public Concentrator.Plugins.ACSystems.ProductInfoService.ExtendedCachedItemInfoDeviceInfo[] Devices {
            get {
                return this.DevicesField;
            }
            set {
                if ((object.ReferenceEquals(this.DevicesField, value) != true)) {
                    this.DevicesField = value;
                    this.RaisePropertyChanged("Devices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public string WebsiteDescription {
            get {
                return this.WebsiteDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.WebsiteDescriptionField, value) != true)) {
                    this.WebsiteDescriptionField = value;
                    this.RaisePropertyChanged("WebsiteDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public string DescriptionFR {
            get {
                return this.DescriptionFRField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionFRField, value) != true)) {
                    this.DescriptionFRField = value;
                    this.RaisePropertyChanged("DescriptionFR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public string WebsiteDescriptionFR {
            get {
                return this.WebsiteDescriptionFRField;
            }
            set {
                if ((object.ReferenceEquals(this.WebsiteDescriptionFRField, value) != true)) {
                    this.WebsiteDescriptionFRField = value;
                    this.RaisePropertyChanged("WebsiteDescriptionFR");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtendedCachedItemInfo.Image", Namespace="http://www.ac-systems.com/AnCWCFWebService/DataContracts/Image/2009/02")]
    [System.SerializableAttribute()]
    public partial class ExtendedCachedItemInfoImage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string URLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtendedCachedItemInfo.DeviceInfo", Namespace="http://www.ac-systems.com/AnCWCFWebService/DataContracts/DeviceInfo/2008/06")]
    [System.SerializableAttribute()]
    public partial class ExtendedCachedItemInfoDeviceInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IDField;
        
        private string NameField;
        
        private string BrandField;
        
        private Concentrator.Plugins.ACSystems.ProductInfoService.ExtendedCachedItemInfoDeviceInfoDeviceTypeEnum TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Concentrator.Plugins.ACSystems.ProductInfoService.ItemReference ItemReferenceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string Brand {
            get {
                return this.BrandField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandField, value) != true)) {
                    this.BrandField = value;
                    this.RaisePropertyChanged("Brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public Concentrator.Plugins.ACSystems.ProductInfoService.ExtendedCachedItemInfoDeviceInfoDeviceTypeEnum Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public Concentrator.Plugins.ACSystems.ProductInfoService.ItemReference ItemReference {
            get {
                return this.ItemReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemReferenceField, value) != true)) {
                    this.ItemReferenceField = value;
                    this.RaisePropertyChanged("ItemReference");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtendedCachedItemInfo.DeviceInfo.DeviceTypeEnum", Namespace="http://www.ac-systems.com/AnCWCFWebService/DataContracts/BrandTypeEnum/2008/11")]
    public enum ExtendedCachedItemInfoDeviceInfoDeviceTypeEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DECT = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GSM = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MP3AndMultimedia = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GPS = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDA = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FixedDevices = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Camcorder = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Camera = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Notebook = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tablet = 9,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemInfoStockCollection", Namespace="http://www.ac-systems.com/AnCWCFWebService/DataContracts/ItemInfoStockCollection/" +
        "2010/05")]
    [System.SerializableAttribute()]
    public partial class ItemInfoStockCollection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Concentrator.Plugins.ACSystems.ProductInfoService.ItemInfoStock[] ItemStockInfosField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Concentrator.Plugins.ACSystems.ProductInfoService.ItemInfoStock[] ItemStockInfos {
            get {
                return this.ItemStockInfosField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemStockInfosField, value) != true)) {
                    this.ItemStockInfosField = value;
                    this.RaisePropertyChanged("ItemStockInfos");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemInfoStock", Namespace="http://www.ac-systems.com/AnCWCFWebService/DataContracts/ItemInfoStock/2011/05")]
    [System.SerializableAttribute()]
    public partial class ItemInfoStock : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Concentrator.Plugins.ACSystems.ProductInfoService.ItemReference ItemReferenceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InStock {
            get {
                return this.InStockField;
            }
            set {
                if ((this.InStockField.Equals(value) != true)) {
                    this.InStockField = value;
                    this.RaisePropertyChanged("InStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Concentrator.Plugins.ACSystems.ProductInfoService.ItemReference ItemReference {
            get {
                return this.ItemReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemReferenceField, value) != true)) {
                    this.ItemReferenceField = value;
                    this.RaisePropertyChanged("ItemReference");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemInfo", Namespace="http://www.ac-systems.com/AnCWCFWebService/DataContracts/ItemInfo/2008/06")]
    [System.SerializableAttribute()]
    public partial class ItemInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Category1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Category2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Category3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Category4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Concentrator.Plugins.ACSystems.ProductInfoService.ItemReference ItemReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Price1PieceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceEndUserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category1 {
            get {
                return this.Category1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Category1Field, value) != true)) {
                    this.Category1Field = value;
                    this.RaisePropertyChanged("Category1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category2 {
            get {
                return this.Category2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Category2Field, value) != true)) {
                    this.Category2Field = value;
                    this.RaisePropertyChanged("Category2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category3 {
            get {
                return this.Category3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Category3Field, value) != true)) {
                    this.Category3Field = value;
                    this.RaisePropertyChanged("Category3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category4 {
            get {
                return this.Category4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Category4Field, value) != true)) {
                    this.Category4Field = value;
                    this.RaisePropertyChanged("Category4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InStock {
            get {
                return this.InStockField;
            }
            set {
                if ((this.InStockField.Equals(value) != true)) {
                    this.InStockField = value;
                    this.RaisePropertyChanged("InStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Concentrator.Plugins.ACSystems.ProductInfoService.ItemReference ItemReference {
            get {
                return this.ItemReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemReferenceField, value) != true)) {
                    this.ItemReferenceField = value;
                    this.RaisePropertyChanged("ItemReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price1Piece {
            get {
                return this.Price1PieceField;
            }
            set {
                if ((this.Price1PieceField.Equals(value) != true)) {
                    this.Price1PieceField = value;
                    this.RaisePropertyChanged("Price1Piece");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PriceEndUser {
            get {
                return this.PriceEndUserField;
            }
            set {
                if ((this.PriceEndUserField.Equals(value) != true)) {
                    this.PriceEndUserField = value;
                    this.RaisePropertyChanged("PriceEndUser");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PriceRequest", Namespace="http://www.ac-systems.com/AnCWCFWebService/DataContracts/PriceRequest/2008/12")]
    [System.SerializableAttribute()]
    public partial class PriceRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Concentrator.Plugins.ACSystems.ProductInfoService.ItemReference ItemReferenceField;
        
        private int AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IncludeEndUserPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Concentrator.Plugins.ACSystems.ProductInfoService.ItemReference ItemReference {
            get {
                return this.ItemReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemReferenceField, value) != true)) {
                    this.ItemReferenceField = value;
                    this.RaisePropertyChanged("ItemReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool IncludeEndUserPrice {
            get {
                return this.IncludeEndUserPriceField;
            }
            set {
                if ((this.IncludeEndUserPriceField.Equals(value) != true)) {
                    this.IncludeEndUserPriceField = value;
                    this.RaisePropertyChanged("IncludeEndUserPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemInfoBasicCollection", Namespace="http://www.ac-systems.com/AnCWCFWebService/DataContracts/ItemInfoBasicCollection/" +
        "2008/12")]
    [System.SerializableAttribute()]
    public partial class ItemInfoBasicCollection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Concentrator.Plugins.ACSystems.ProductInfoService.ItemInfoBasic[] ItemInfosField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Concentrator.Plugins.ACSystems.ProductInfoService.ItemInfoBasic[] ItemInfos {
            get {
                return this.ItemInfosField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemInfosField, value) != true)) {
                    this.ItemInfosField = value;
                    this.RaisePropertyChanged("ItemInfos");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemInfoBasic", Namespace="http://www.ac-systems.com/AnCWCFWebService/DataContracts/DeviceInfo/2008/06")]
    [System.SerializableAttribute()]
    public partial class ItemInfoBasic : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Concentrator.Plugins.ACSystems.ProductInfoService.ItemReference ItemReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal EndUserPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Concentrator.Plugins.ACSystems.ProductInfoService.ItemReference ItemReference {
            get {
                return this.ItemReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemReferenceField, value) != true)) {
                    this.ItemReferenceField = value;
                    this.RaisePropertyChanged("ItemReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int InStock {
            get {
                return this.InStockField;
            }
            set {
                if ((this.InStockField.Equals(value) != true)) {
                    this.InStockField = value;
                    this.RaisePropertyChanged("InStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<int> Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public decimal EndUserPrice {
            get {
                return this.EndUserPriceField;
            }
            set {
                if ((this.EndUserPriceField.Equals(value) != true)) {
                    this.EndUserPriceField = value;
                    this.RaisePropertyChanged("EndUserPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05", ConfigurationName="ProductInfoService.IProductInfoService")]
    public interface IProductInfoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/FindItemReferencesByDescription", ReplyAction="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/FindItemReferencesByDescriptionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.ArgumentInvalidException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/FindItemReferencesByDescriptionArgumentInvalidExceptionFault", Name="ArgumentInvalidException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.NotAuthorizedException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/FindItemReferencesByDescriptionNotAuthorizedExceptionFault", Name="NotAuthorizedException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.SessionKeyNotValidException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/FindItemReferencesByDescriptionSessionKeyNotValidExceptionFault", Name="SessionKeyNotValidException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        Concentrator.Plugins.ACSystems.ProductInfoService.ItemReferenceCollection FindItemReferencesByDescription(string session_key, string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/FindItemReferencesByBrandCode", ReplyAction="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/FindItemReferencesByBrandCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.SessionKeyNotValidException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/FindItemReferencesByBrandCodeSessionKeyNotValidExceptionFault", Name="SessionKeyNotValidException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.ArgumentInvalidException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/FindItemReferencesByBrandCodeArgumentInvalidExceptionFault", Name="ArgumentInvalidException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.NotAuthorizedException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/FindItemReferencesByBrandCodeNotAuthorizedExceptionFault", Name="NotAuthorizedException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        Concentrator.Plugins.ACSystems.ProductInfoService.ItemReferenceCollection FindItemReferencesByBrandCode(string session_key, string brand_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetBrands", ReplyAction="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetBrandsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.SessionKeyNotValidException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetBrandsSessionKeyNotValidExceptionFault", Name="SessionKeyNotValidException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.NotAuthorizedException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetBrandsNotAuthorizedExceptionFault", Name="NotAuthorizedException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        Concentrator.Plugins.ACSystems.ProductInfoService.Brand[] GetBrands(string session_key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/FindDeviceInfosCompatibleWithItemReference", ReplyAction="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/FindDeviceInfosCompatibleWithItemReferenceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.NotAuthorizedException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/FindDeviceInfosCompatibleWithItemReferenceNotAuthorizedExceptionF" +
            "ault", Name="NotAuthorizedException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.SessionKeyNotValidException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/FindDeviceInfosCompatibleWithItemReferenceSessionKeyNotValidExcep" +
            "tionFault", Name="SessionKeyNotValidException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.ItemNotFoundException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/FindDeviceInfosCompatibleWithItemReferenceItemNotFoundExceptionFa" +
            "ult", Name="ItemNotFoundException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        Concentrator.Plugins.ACSystems.ProductInfoService.DeviceInfo[] FindDeviceInfosCompatibleWithItemReference(string session_key, Concentrator.Plugins.ACSystems.ProductInfoService.ItemReference item_reference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullDeviceList", ReplyAction="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullDeviceListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.SessionKeyNotValidException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullDeviceListSessionKeyNotValidExceptionFault", Name="SessionKeyNotValidException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.NotAuthorizedException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullDeviceListNotAuthorizedExceptionFault", Name="NotAuthorizedException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        Concentrator.Plugins.ACSystems.ProductInfoService.DeviceInfo[] GetFullDeviceList(string session_key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullDeviceListForBrand", ReplyAction="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullDeviceListForBrandResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.NotAuthorizedException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullDeviceListForBrandNotAuthorizedExceptionFault", Name="NotAuthorizedException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.SessionKeyNotValidException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullDeviceListForBrandSessionKeyNotValidExceptionFault", Name="SessionKeyNotValidException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        Concentrator.Plugins.ACSystems.ProductInfoService.DeviceInfo[] GetFullDeviceListForBrand(string session_key, string brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullDeviceListForBrandAndType", ReplyAction="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullDeviceListForBrandAndTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.NotAuthorizedException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullDeviceListForBrandAndTypeNotAuthorizedExceptionFault", Name="NotAuthorizedException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.SessionKeyNotValidException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullDeviceListForBrandAndTypeSessionKeyNotValidExceptionFault", Name="SessionKeyNotValidException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        Concentrator.Plugins.ACSystems.ProductInfoService.DeviceInfo[] GetFullDeviceListForBrandAndType(string session_key, string brand, Concentrator.Plugins.ACSystems.ProductInfoService.DeviceTypeEnum brand_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullDeviceBrandList", ReplyAction="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullDeviceBrandListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.NotAuthorizedException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullDeviceBrandListNotAuthorizedExceptionFault", Name="NotAuthorizedException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.SessionKeyNotValidException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullDeviceBrandListSessionKeyNotValidExceptionFault", Name="SessionKeyNotValidException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        string[] GetFullDeviceBrandList(string session_key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullDeviceBrandListByType", ReplyAction="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullDeviceBrandListByTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.SessionKeyNotValidException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullDeviceBrandListByTypeSessionKeyNotValidExceptionFault", Name="SessionKeyNotValidException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.NotAuthorizedException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullDeviceBrandListByTypeNotAuthorizedExceptionFault", Name="NotAuthorizedException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        string[] GetFullDeviceBrandListByType(string session_key, Concentrator.Plugins.ACSystems.ProductInfoService.DeviceTypeEnum brand_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/FindItemReferencesCompatibleWithDeviceID", ReplyAction="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/FindItemReferencesCompatibleWithDeviceIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.NotAuthorizedException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/FindItemReferencesCompatibleWithDeviceIDNotAuthorizedExceptionFau" +
            "lt", Name="NotAuthorizedException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.SessionKeyNotValidException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/FindItemReferencesCompatibleWithDeviceIDSessionKeyNotValidExcepti" +
            "onFault", Name="SessionKeyNotValidException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        Concentrator.Plugins.ACSystems.ProductInfoService.ItemReferenceCollection FindItemReferencesCompatibleWithDeviceID(string session_key, int device_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/FindItemReferencesCompatibleWithItemReference", ReplyAction="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/FindItemReferencesCompatibleWithItemReferenceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.SessionKeyNotValidException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/FindItemReferencesCompatibleWithItemReferenceSessionKeyNotValidEx" +
            "ceptionFault", Name="SessionKeyNotValidException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.NotAuthorizedException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/FindItemReferencesCompatibleWithItemReferenceNotAuthorizedExcepti" +
            "onFault", Name="NotAuthorizedException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.ItemNotFoundException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/FindItemReferencesCompatibleWithItemReferenceItemNotFoundExceptio" +
            "nFault", Name="ItemNotFoundException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        Concentrator.Plugins.ACSystems.ProductInfoService.ItemReferenceCollection FindItemReferencesCompatibleWithItemReference(string session_key, Concentrator.Plugins.ACSystems.ProductInfoService.ItemReference item_reference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullProductList", ReplyAction="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullProductListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.SessionKeyNotValidException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullProductListSessionKeyNotValidExceptionFault", Name="SessionKeyNotValidException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.NotAuthorizedException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullProductListNotAuthorizedExceptionFault", Name="NotAuthorizedException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        Concentrator.Plugins.ACSystems.ProductInfoService.CachedItemInfoCollection GetFullProductList(string session_key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullProductListExtended", ReplyAction="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullProductListExtendedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.NotAuthorizedException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullProductListExtendedNotAuthorizedExceptionFault", Name="NotAuthorizedException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.SessionKeyNotValidException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullProductListExtendedSessionKeyNotValidExceptionFault", Name="SessionKeyNotValidException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        Concentrator.Plugins.ACSystems.ProductInfoService.ExtendedCachedItemInfoCollection GetFullProductListExtended(string session_key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullItemReferencesList", ReplyAction="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullItemReferencesListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.NotAuthorizedException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullItemReferencesListNotAuthorizedExceptionFault", Name="NotAuthorizedException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.SessionKeyNotValidException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullItemReferencesListSessionKeyNotValidExceptionFault", Name="SessionKeyNotValidException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        Concentrator.Plugins.ACSystems.ProductInfoService.ItemReferenceCollection GetFullItemReferencesList(string session_key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullStockList", ReplyAction="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullStockListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.UnauthorizedAccessException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullStockListUnauthorizedAccessExceptionFault", Name="UnauthorizedAccessException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.SessionKeyNotValidException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullStockListSessionKeyNotValidExceptionFault", Name="SessionKeyNotValidException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ApplicationException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetFullStockListApplicationExceptionFault", Name="ApplicationException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        Concentrator.Plugins.ACSystems.ProductInfoService.ItemInfoStockCollection GetFullStockList(string session_key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetItemInfoByReference", ReplyAction="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetItemInfoByReferenceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.ItemNotFoundException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetItemInfoByReferenceItemNotFoundExceptionFault", Name="ItemNotFoundException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.NotAuthorizedException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetItemInfoByReferenceNotAuthorizedExceptionFault", Name="NotAuthorizedException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.SessionKeyNotValidException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetItemInfoByReferenceSessionKeyNotValidExceptionFault", Name="SessionKeyNotValidException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.ArgumentInvalidException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetItemInfoByReferenceArgumentInvalidExceptionFault", Name="ArgumentInvalidException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        Concentrator.Plugins.ACSystems.ProductInfoService.ItemInfo GetItemInfoByReference(string session_key, Concentrator.Plugins.ACSystems.ProductInfoService.ItemReference reference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetPriceByItemReferenceAndAmount", ReplyAction="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetPriceByItemReferenceAndAmountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.ItemNotFoundException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetPriceByItemReferenceAndAmountItemNotFoundExceptionFault", Name="ItemNotFoundException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.ArgumentInvalidException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetPriceByItemReferenceAndAmountArgumentInvalidExceptionFault", Name="ArgumentInvalidException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.NotAuthorizedException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetPriceByItemReferenceAndAmountNotAuthorizedExceptionFault", Name="NotAuthorizedException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.SessionKeyNotValidException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetPriceByItemReferenceAndAmountSessionKeyNotValidExceptionFault", Name="SessionKeyNotValidException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        double GetPriceByItemReferenceAndAmount(string session_key, Concentrator.Plugins.ACSystems.ProductInfoService.ItemReference item_reference, int amount, bool give_enduser_price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetStockByItemReference", ReplyAction="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetStockByItemReferenceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.ItemNotFoundException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetStockByItemReferenceItemNotFoundExceptionFault", Name="ItemNotFoundException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.NotAuthorizedException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetStockByItemReferenceNotAuthorizedExceptionFault", Name="NotAuthorizedException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.SessionKeyNotValidException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetStockByItemReferenceSessionKeyNotValidExceptionFault", Name="SessionKeyNotValidException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        int GetStockByItemReference(string session_key, Concentrator.Plugins.ACSystems.ProductInfoService.ItemReference item_reference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetPriceForPriceRequests", ReplyAction="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetPriceForPriceRequestsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.SessionKeyNotValidException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetPriceForPriceRequestsSessionKeyNotValidExceptionFault", Name="SessionKeyNotValidException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.NotAuthorizedException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetPriceForPriceRequestsNotAuthorizedExceptionFault", Name="NotAuthorizedException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        Concentrator.Plugins.ACSystems.ProductInfoService.ItemInfoBasicCollection GetPriceForPriceRequests(string session_key, Concentrator.Plugins.ACSystems.ProductInfoService.PriceRequest[] requests);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetStockForItemReferences", ReplyAction="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetStockForItemReferencesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.NotAuthorizedException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetStockForItemReferencesNotAuthorizedExceptionFault", Name="NotAuthorizedException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.SessionKeyNotValidException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetStockForItemReferencesSessionKeyNotValidExceptionFault", Name="SessionKeyNotValidException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        Concentrator.Plugins.ACSystems.ProductInfoService.ItemInfoBasicCollection GetStockForItemReferences(string session_key, Concentrator.Plugins.ACSystems.ProductInfoService.ItemReference[] references);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetPriceAndStockForPriceRequests", ReplyAction="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetPriceAndStockForPriceRequestsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.SessionKeyNotValidException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetPriceAndStockForPriceRequestsSessionKeyNotValidExceptionFault", Name="SessionKeyNotValidException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Concentrator.Plugins.ACSystems.ProductInfoService.NotAuthorizedException), Action="http://services.client.ac-systems.com/contracts/IProductInfoService/2011/05/IProd" +
            "uctInfoService/GetPriceAndStockForPriceRequestsNotAuthorizedExceptionFault", Name="NotAuthorizedException", Namespace="http://schemas.datacontract.org/2004/07/AnCWCFWebService.Exceptions")]
        Concentrator.Plugins.ACSystems.ProductInfoService.ItemInfoBasicCollection GetPriceAndStockForPriceRequests(string session_key, Concentrator.Plugins.ACSystems.ProductInfoService.PriceRequest[] requests);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductInfoServiceChannel : Concentrator.Plugins.ACSystems.ProductInfoService.IProductInfoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductInfoServiceClient : System.ServiceModel.ClientBase<Concentrator.Plugins.ACSystems.ProductInfoService.IProductInfoService>, Concentrator.Plugins.ACSystems.ProductInfoService.IProductInfoService {
        
        public ProductInfoServiceClient() {
        }
        
        public ProductInfoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductInfoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductInfoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductInfoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Concentrator.Plugins.ACSystems.ProductInfoService.ItemReferenceCollection FindItemReferencesByDescription(string session_key, string text) {
            return base.Channel.FindItemReferencesByDescription(session_key, text);
        }
        
        public Concentrator.Plugins.ACSystems.ProductInfoService.ItemReferenceCollection FindItemReferencesByBrandCode(string session_key, string brand_code) {
            return base.Channel.FindItemReferencesByBrandCode(session_key, brand_code);
        }
        
        public Concentrator.Plugins.ACSystems.ProductInfoService.Brand[] GetBrands(string session_key) {
            return base.Channel.GetBrands(session_key);
        }
        
        public Concentrator.Plugins.ACSystems.ProductInfoService.DeviceInfo[] FindDeviceInfosCompatibleWithItemReference(string session_key, Concentrator.Plugins.ACSystems.ProductInfoService.ItemReference item_reference) {
            return base.Channel.FindDeviceInfosCompatibleWithItemReference(session_key, item_reference);
        }
        
        public Concentrator.Plugins.ACSystems.ProductInfoService.DeviceInfo[] GetFullDeviceList(string session_key) {
            return base.Channel.GetFullDeviceList(session_key);
        }
        
        public Concentrator.Plugins.ACSystems.ProductInfoService.DeviceInfo[] GetFullDeviceListForBrand(string session_key, string brand) {
            return base.Channel.GetFullDeviceListForBrand(session_key, brand);
        }
        
        public Concentrator.Plugins.ACSystems.ProductInfoService.DeviceInfo[] GetFullDeviceListForBrandAndType(string session_key, string brand, Concentrator.Plugins.ACSystems.ProductInfoService.DeviceTypeEnum brand_type) {
            return base.Channel.GetFullDeviceListForBrandAndType(session_key, brand, brand_type);
        }
        
        public string[] GetFullDeviceBrandList(string session_key) {
            return base.Channel.GetFullDeviceBrandList(session_key);
        }
        
        public string[] GetFullDeviceBrandListByType(string session_key, Concentrator.Plugins.ACSystems.ProductInfoService.DeviceTypeEnum brand_type) {
            return base.Channel.GetFullDeviceBrandListByType(session_key, brand_type);
        }
        
        public Concentrator.Plugins.ACSystems.ProductInfoService.ItemReferenceCollection FindItemReferencesCompatibleWithDeviceID(string session_key, int device_id) {
            return base.Channel.FindItemReferencesCompatibleWithDeviceID(session_key, device_id);
        }
        
        public Concentrator.Plugins.ACSystems.ProductInfoService.ItemReferenceCollection FindItemReferencesCompatibleWithItemReference(string session_key, Concentrator.Plugins.ACSystems.ProductInfoService.ItemReference item_reference) {
            return base.Channel.FindItemReferencesCompatibleWithItemReference(session_key, item_reference);
        }
        
        public Concentrator.Plugins.ACSystems.ProductInfoService.CachedItemInfoCollection GetFullProductList(string session_key) {
            return base.Channel.GetFullProductList(session_key);
        }
        
        public Concentrator.Plugins.ACSystems.ProductInfoService.ExtendedCachedItemInfoCollection GetFullProductListExtended(string session_key) {
            return base.Channel.GetFullProductListExtended(session_key);
        }
        
        public Concentrator.Plugins.ACSystems.ProductInfoService.ItemReferenceCollection GetFullItemReferencesList(string session_key) {
            return base.Channel.GetFullItemReferencesList(session_key);
        }
        
        public Concentrator.Plugins.ACSystems.ProductInfoService.ItemInfoStockCollection GetFullStockList(string session_key) {
            return base.Channel.GetFullStockList(session_key);
        }
        
        public Concentrator.Plugins.ACSystems.ProductInfoService.ItemInfo GetItemInfoByReference(string session_key, Concentrator.Plugins.ACSystems.ProductInfoService.ItemReference reference) {
            return base.Channel.GetItemInfoByReference(session_key, reference);
        }
        
        public double GetPriceByItemReferenceAndAmount(string session_key, Concentrator.Plugins.ACSystems.ProductInfoService.ItemReference item_reference, int amount, bool give_enduser_price) {
            return base.Channel.GetPriceByItemReferenceAndAmount(session_key, item_reference, amount, give_enduser_price);
        }
        
        public int GetStockByItemReference(string session_key, Concentrator.Plugins.ACSystems.ProductInfoService.ItemReference item_reference) {
            return base.Channel.GetStockByItemReference(session_key, item_reference);
        }
        
        public Concentrator.Plugins.ACSystems.ProductInfoService.ItemInfoBasicCollection GetPriceForPriceRequests(string session_key, Concentrator.Plugins.ACSystems.ProductInfoService.PriceRequest[] requests) {
            return base.Channel.GetPriceForPriceRequests(session_key, requests);
        }
        
        public Concentrator.Plugins.ACSystems.ProductInfoService.ItemInfoBasicCollection GetStockForItemReferences(string session_key, Concentrator.Plugins.ACSystems.ProductInfoService.ItemReference[] references) {
            return base.Channel.GetStockForItemReferences(session_key, references);
        }
        
        public Concentrator.Plugins.ACSystems.ProductInfoService.ItemInfoBasicCollection GetPriceAndStockForPriceRequests(string session_key, Concentrator.Plugins.ACSystems.ProductInfoService.PriceRequest[] requests) {
            return base.Channel.GetPriceAndStockForPriceRequests(session_key, requests);
        }
    }
}
